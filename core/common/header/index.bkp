import React, { useState, useEffect, useRef } from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import {
  setDataLayout,
  setDataTheme,
} from '../../data/redux/themeSettingSlice';
import ImageWithBasePath from '../imageWithBasePath';
import {
  setExpandMenu,
  setMobileSidebar,
  toggleMiniSidebar,
} from '../../data/redux/sidebarSlice';
import { all_routes } from '../../../feature-module/router/all_routes';
import { useAuth } from '../../../context/AuthContext';
import SeasonDropdown from '../../../components/common/SeasonDropdown';
import ParentModal from '../../../feature-module/peoples/parent/parentModal';
import { Player, SearchResult, Address } from '../../../types/types';

const Header = () => {
  const {
    parent,
    role,
    logout,
    searchAll,
    fetchGuardians,
    fetchParentPlayers,
    fetchAllGuardians,
  } = useAuth();
  const handleLogout = () => {
    logout(); // Custom logout function
    window.location.href = '/'; // Redirect to home after logout
  };

  const routes = all_routes;
  const dispatch = useDispatch();
  const dataTheme = useSelector((state: any) => state.themeSetting.dataTheme);
  const dataLayout = useSelector((state: any) => state.themeSetting.dataLayout);
  const [notificationVisible, setNotificationVisible] = useState(false);
  const navigate = useNavigate();

  // Search related state
  const [searchTerm, setSearchTerm] = useState('');
  const [results, setResults] = useState<SearchResult[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [showResults, setShowResults] = useState(false);
  const searchRef = useRef<HTMLDivElement>(null);

  const [showParentModal, setShowParentModal] = useState(false);
  const [selectedParent, setSelectedParent] = useState<SearchResult | null>(
    null
  );
  const [parentPlayers, setParentPlayers] = useState<Player[]>([]);

  const formatAddressObject = (address: Address): string => {
    const parts = [
      address.street,
      address.city,
      address.state,
      address.zip,
    ].filter((part) => part && part.trim() !== '');

    return parts.join(', ');
  };

  // Handle click outside search results
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (
        searchRef.current &&
        !searchRef.current.contains(event.target as Node)
      ) {
        setShowResults(false);
      }
    };
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);

  // Handle search term changes
  useEffect(() => {
    console.log('Search term changed:', searchTerm); // Debug log
    if (searchTerm.trim() === '') {
      console.log('Empty search term, clearing results'); // Debug log
      setResults([]);
      return;
    }

    const timer = setTimeout(async () => {
      console.log('Executing search for:', searchTerm); // Debug log
      setIsLoading(true);
      try {
        const searchResults = await searchAll(searchTerm);
        console.log('Received search results:', searchResults); // Debug log
        setResults(searchResults);
        setShowResults(true);
      } catch (error) {
        console.error('Search failed:', error);
      } finally {
        setIsLoading(false);
      }
    }, 300);

    return () => clearTimeout(timer);
  }, [searchTerm, searchAll]);

  const handleResultClick = async (result: SearchResult) => {
    setShowResults(false);
    setSearchTerm('');

    try {
      console.log('Attempting navigation with result:', result);
      console.log('Full result data:', JSON.stringify(result, null, 2)); // Debug full result object

      switch (result.type) {
        case 'player':
          try {
            const guardians = await fetchGuardians(result.id);
            let recentlyViewed = JSON.parse(
              localStorage.getItem('recentlyViewed') || '[]'
            );
            recentlyViewed = [
              result.id,
              ...recentlyViewed.filter((id: string) => id !== result.id),
            ].slice(0, 5);

            localStorage.setItem(
              'recentlyViewed',
              JSON.stringify(recentlyViewed)
            );

            navigate(`${routes.playerDetail}/${result.id}`, {
              state: {
                player: {
                  _id: result.id,
                  fullName: result.name,
                  gender: result.gender || '',
                  grade: result.grade || '',
                  dob: result.dob || '',
                  aauNumber: result.aauNumber || '',
                  ...(result.additionalInfo && {
                    schoolName: result.additionalInfo,
                  }),
                  createdAt: result.createdAt,
                },
                guardians,
                fromSearch: true,
              },
            });
          } catch (err) {
            console.error('Error fetching guardians:', err);
            navigate(`${routes.playerDetail}/${result.id}`, {
              state: { fromSearch: true },
            });
          }
          break;

        case 'parent':
          try {
            console.log('Fetching players for parent ID:', result.id);
            const players = await fetchParentPlayers(result.id);

            // Create enhanced parent data with fallbacks
            const parentData = {
              ...result,
              phone: result.phone || 'Not specified',
              address: result.address || 'Not specified',
              aauNumber: result.aauNumber || 'Not specified',
              email: result.email || 'Not specified',
            };

            console.log('Parent data being set:', parentData);
            console.log('Players data:', players);

            setParentPlayers(players);
            setSelectedParent(parentData);
            setShowParentModal(true);
          } catch (err) {
            console.error('Error fetching parent details:', err);
            // Fallback with basic parent data if fetch fails
            setSelectedParent({
              ...result,
              phone: result.phone || 'Not specified',
              address: result.address || 'Not specified',
              aauNumber: result.aauNumber || 'Not specified',
            });
            setShowParentModal(true);
          }
          break;

        case 'school':
          const schoolPath = `${routes.playerList}?school=${encodeURIComponent(
            result.name
          )}`;
          console.log('Navigating to:', schoolPath);
          navigate(schoolPath, {
            state: { searchFilter: result.name },
          });
          break;

        default:
          console.warn('Unhandled search result type:', result.type);
      }
    } catch (error) {
      console.error('Navigation failed:', error);
      setShowResults(true);
    }
  };

  const mobileSidebar = useSelector(
    (state: any) => state.sidebarSlice.mobileSidebar
  );

  const toggleMobileSidebar = () => {
    dispatch(setMobileSidebar(!mobileSidebar));
  };

  const onMouseEnter = () => {
    dispatch(setExpandMenu(true));
  };
  const onMouseLeave = () => {
    dispatch(setExpandMenu(false));
  };
  const handleToggleMiniSidebar = () => {
    if (dataLayout === 'mini_layout') {
      dispatch(setDataLayout('default_layout'));
      localStorage.setItem('dataLayout', 'default_layout');
    } else {
      dispatch(toggleMiniSidebar());
    }
  };

  const handleToggleClick = () => {
    if (dataTheme === 'default_data_theme') {
      dispatch(setDataTheme('dark_data_theme'));
    } else {
      dispatch(setDataTheme('default_data_theme'));
    }
  };

  const location = useLocation();
  const toggleNotification = () => {
    setNotificationVisible(!notificationVisible);
  };

  const [isFullscreen, setIsFullscreen] = useState(false);
  const toggleFullscreen = () => {
    if (!isFullscreen) {
      if (document.documentElement.requestFullscreen) {
        document.documentElement.requestFullscreen().catch((err) => {});
        setIsFullscreen(true);
      }
    } else {
      if (document.exitFullscreen) {
        if (document.fullscreenElement) {
          document.exitFullscreen().catch((err) => {});
        }
        setIsFullscreen(false);
      }
    }
  };

  return (
    <>
      {/* Header */}
      <div className='header'>
        {/* Logo */}
        <div
          className='header-left active'
          onMouseEnter={onMouseEnter}
          onMouseLeave={onMouseLeave}
        >
          <Link to={routes.adminDashboard} className='logo logo-normal'>
            <ImageWithBasePath src='assets/img/logo.png' alt='Logo' />
          </Link>
          <Link to={routes.adminDashboard} className='logo-small'>
            <ImageWithBasePath src='assets/img/logo-small.png' alt='Logo' />
          </Link>
          <Link to={routes.adminDashboard} className='dark-logo'>
            <ImageWithBasePath src='assets/img/logo-dark.svg' alt='Logo' />
          </Link>
          <Link id='toggle_btn' to='#' onClick={handleToggleMiniSidebar}>
            <i className='ti ti-menu-deep' />
          </Link>
        </div>
        {/* /Logo */}
        <Link
          id='mobile_btn'
          className='mobile_btn'
          to='#sidebar'
          onClick={toggleMobileSidebar}
        >
          <span className='bar-icon'>
            <span />
            <span />
            <span />
          </span>
        </Link>
        <div className='header-user'>
          <div className='nav user-menu'>
            {/* Search */}
            <div className='nav-item nav-search-inputs me-auto' ref={searchRef}>
              {parent?.role === 'admin' && (
                <div className='top-nav-search'>
                  <Link to='#' className='responsive-search'>
                    <i className='fa fa-search' />
                  </Link>
                  <form
                    onSubmit={(e) => {
                      e.preventDefault();
                      if (results.length > 0) {
                        handleResultClick(results[0]);
                      }
                    }}
                    action='#'
                    className='dropdown'
                  >
                    <div className='searchinputs' id='dropdownMenuClickable'>
                      <input
                        type='text'
                        placeholder='Search players, parents, schools...'
                        value={searchTerm}
                        onChange={(e) => setSearchTerm(e.target.value)}
                        onFocus={() => searchTerm && setShowResults(true)}
                      />
                      <div className='search-addon'>
                        <button type='submit'>
                          <i className='ti ti-command' />
                        </button>
                      </div>
                      {showResults && (results.length > 0 || isLoading) && (
                        <div className='search-results-dropdown'>
                          {isLoading ? (
                            <div className='search-result-item'>
                              <div className='d-flex align-items-center justify-content-center'>
                                <div
                                  className='spinner-border spinner-border-sm me-2'
                                  role='status'
                                >
                                  <span className='visually-hidden'>
                                    Loading...
                                  </span>
                                </div>
                                <span>Searching...</span>
                              </div>
                            </div>
                          ) : results.length > 0 ? (
                            results.map((result: SearchResult) => (
                              <div
                                key={`${result.type}-${result.id}`}
                                className={`search-result-item cursor-pointer ${
                                  result.type === 'parent'
                                    ? 'parent-result'
                                    : ''
                                }`}
                                onClick={() => handleResultClick(result)}
                              >
                                <div className='d-flex align-items-center'>
                                  {result.image && (
                                    <div className='avatar avatar-sm me-2'>
                                      <ImageWithBasePath
                                        src={result.image}
                                        alt={result.name}
                                      />
                                    </div>
                                  )}
                                  <div>
                                    <h6 className='mb-0'>
                                      {result.name}
                                      {result.type === 'parent' && (
                                        <span className='badge bg-info ms-2'>
                                          Parent
                                        </span>
                                      )}
                                    </h6>
                                    {result.email && (
                                      <small className='text-muted'>
                                        {result.email}
                                      </small>
                                    )}
                                    {result.additionalInfo && (
                                      <small className='d-block'>
                                        {result.additionalInfo}
                                      </small>
                                    )}
                                  </div>
                                </div>
                              </div>
                            ))
                          ) : (
                            <div className='search-result-item'>
                              <div className='text-center py-2'>
                                No results found
                              </div>
                            </div>
                          )}
                        </div>
                      )}
                    </div>
                  </form>
                </div>
              )}
            </div>
            {/* /Search */}
            <div className='d-flex align-items-center'>
              {parent?.role === 'admin' && (
                <div className='dropdown me-2'>
                  <Link
                    to='#'
                    className='btn btn-outline-light fw-normal bg-white d-flex align-items-center p-2'
                    data-bs-toggle='dropdown'
                    aria-expanded='false'
                  >
                    <i className='ti ti-calendar-due me-1' />
                    Select Season
                  </Link>
                  <SeasonDropdown />
                </div>
              )}
              <div className='pe-1'>
                <div className='dropdown'>
                  <Link
                    to='#'
                    className='btn btn-outline-light bg-white btn-icon me-1'
                    data-bs-toggle='dropdown'
                    aria-expanded='false'
                  >
                    <i className='ti ti-square-rounded-plus' />
                  </Link>
                  <div className='dropdown-menu dropdown-menu-right border shadow-sm dropdown-md'>
                    <div className='p-3 border-bottom'>
                      <h5>Add New</h5>
                    </div>
                    <div className='p-3 pb-0'>
                      <div className='row gx-2'>
                        <div className='col-6'>
                          <Link
                            to={routes.addPlayer}
                            className='d-block bg-primary-transparent ronded p-2 text-center mb-3 class-hover'
                          >
                            <div className='avatar avatar-lg mb-2'>
                              <span className='d-inline-flex align-items-center justify-content-center w-100 h-100 bg-primary rounded-circle'>
                                <i className='ti ti-school' />
                              </span>
                            </div>
                            <p className='text-dark'>Players</p>
                          </Link>
                        </div>
                        <div className='col-6'>
                          <Link
                            to={routes.addCoach}
                            className='d-block bg-success-transparent ronded p-2 text-center mb-3 class-hover'
                          >
                            <div className='avatar avatar-lg mb-2'>
                              <span className='d-inline-flex align-items-center justify-content-center w-100 h-100 bg-success rounded-circle'>
                                <i className='ti ti-users' />
                              </span>
                            </div>
                            <p className='text-dark'>Coachs</p>
                          </Link>
                        </div>
                        <div className='col-6'>
                          <Link
                            to={routes.addStaff}
                            className='d-block bg-warning-transparent ronded p-2 text-center mb-3 class-hover'
                          >
                            <div className='avatar avatar-lg rounded-circle mb-2'>
                              <span className='d-inline-flex align-items-center justify-content-center w-100 h-100 bg-warning rounded-circle'>
                                <i className='ti ti-users-group' />
                              </span>
                            </div>
                            <p className='text-dark'>Staffs</p>
                          </Link>
                        </div>
                        <div className='col-6'>
                          <Link
                            to={routes.addInvoice}
                            className='d-block bg-info-transparent ronded p-2 text-center mb-3 class-hover'
                          >
                            <div className='avatar avatar-lg mb-2'>
                              <span className='d-inline-flex align-items-center justify-content-center w-100 h-100 bg-info rounded-circle'>
                                <i className='ti ti-license' />
                              </span>
                            </div>
                            <p className='text-dark'>Invoice</p>
                          </Link>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div className='pe-1'>
                {!location.pathname.includes('layout-dark') && (
                  <Link
                    onClick={handleToggleClick}
                    to='#'
                    id='dark-mode-toggle'
                    className='dark-mode-toggle activate btn btn-outline-light bg-white btn-icon me-1'
                  >
                    <i
                      className={
                        dataTheme === 'default_data_theme'
                          ? 'ti ti-moon'
                          : 'ti ti-brightness-up'
                      }
                    />
                  </Link>
                )}
              </div>
              <div
                className={`pe-1 ${
                  notificationVisible ? 'notification-item-show' : ''
                }`}
                id='notification_item'
              >
                <Link
                  onClick={toggleNotification}
                  to='#'
                  className='btn btn-outline-light bg-white btn-icon position-relative me-1'
                  id='notification_popup'
                >
                  <i className='ti ti-bell' />
                  <span className='notification-status-dot' />
                </Link>
                <div className='dropdown-menu dropdown-menu-end notification-dropdown p-4'>
                  <div className='d-flex align-items-center justify-content-between border-bottom p-0 pb-3 mb-3'>
                    <h4 className='notification-title'>Notifications (2)</h4>
                    <div className='d-flex align-items-center'>
                      <Link to='#' className='text-primary fs-15 me-3 lh-1'>
                        Mark all as read
                      </Link>
                      <div className='dropdown'>
                        <Link
                          to='#'
                          className='bg-white dropdown-toggle'
                          data-bs-toggle='dropdown'
                        >
                          <i className='ti ti-calendar-due me-1' />
                          Today
                        </Link>
                        <ul className='dropdown-menu mt-2 p-3'>
                          <li>
                            <Link to='#' className='dropdown-item rounded-1'>
                              This Week
                            </Link>
                          </li>
                          <li>
                            <Link to='#' className='dropdown-item rounded-1'>
                              Last Week
                            </Link>
                          </li>
                          <li>
                            <Link to='#' className='dropdown-item rounded-1'>
                              Last Week
                            </Link>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </div>
                  <div className='noti-content'>
                    <div className='d-flex flex-column'>
                      <div className='border-bottom mb-3 pb-3'>
                        <Link to={routes.activity}>
                          <div className='d-flex'>
                            <span className='avatar avatar-lg me-2 flex-shrink-0'>
                              <ImageWithBasePath
                                src='assets/img/profiles/avatar-27.jpg'
                                alt='Profile'
                              />
                            </span>
                            <div className='flex-grow-1'>
                              <p className='mb-1'>
                                <span className='text-dark fw-semibold'>
                                  Shawn
                                </span>{' '}
                                performance in Math is below the threshold.
                              </p>
                              <span>Just Now</span>
                            </div>
                          </div>
                        </Link>
                      </div>
                      <div className='border-bottom mb-3 pb-3'>
                        <Link to={routes.activity} className='pb-0'>
                          <div className='d-flex'>
                            <span className='avatar avatar-lg me-2 flex-shrink-0'>
                              <ImageWithBasePath
                                src='assets/img/profiles/avatar-23.jpg'
                                alt='Profile'
                              />
                            </span>
                            <div className='flex-grow-1'>
                              <p className='mb-1'>
                                <span className='text-dark fw-semibold'>
                                  Sylvia
                                </span>{' '}
                                added appointment on 02:00 PM
                              </p>
                              <span>10 mins ago</span>
                              <div className='d-flex justify-content-start align-items-center mt-1'>
                                <span className='btn btn-light btn-sm me-2'>
                                  Deny
                                </span>
                                <span className='btn btn-primary btn-sm'>
                                  Approve
                                </span>
                              </div>
                            </div>
                          </div>
                        </Link>
                      </div>
                      <div className='border-bottom mb-3 pb-3'>
                        <Link to={routes.activity}>
                          <div className='d-flex'>
                            <span className='avatar avatar-lg me-2 flex-shrink-0'>
                              <ImageWithBasePath
                                src='assets/img/profiles/avatar-25.jpg'
                                alt='Profile'
                              />
                            </span>
                            <div className='flex-grow-1'>
                              <p className='mb-1'>
                                New student record{' '}
                                <span className='text-dark fw-semibold'>
                                  {' '}
                                  George
                                </span>{' '}
                                is created by{' '}
                                <span className='text-dark fw-semibold'>
                                  Teressa
                                </span>
                              </p>
                              <span>2 hrs ago</span>
                            </div>
                          </div>
                        </Link>
                      </div>
                      <div className='border-0 mb-3 pb-0'>
                        <Link to={routes.activity}>
                          <div className='d-flex'>
                            <span className='avatar avatar-lg me-2 flex-shrink-0'>
                              <ImageWithBasePath
                                src='assets/img/profiles/avatar-01.jpg'
                                alt='Profile'
                              />
                            </span>
                            <div className='flex-grow-1'>
                              <p className='mb-1'>
                                A new coach record for{' '}
                                <span className='text-dark fw-semibold'>
                                  Elisa
                                </span>
                              </p>
                              <span>09:45 AM</span>
                            </div>
                          </div>
                        </Link>
                      </div>
                    </div>
                  </div>
                  <div className='d-flex p-0'>
                    <Link to='#' className='btn btn-light w-100 me-2'>
                      Cancel
                    </Link>
                    <Link
                      to={routes.activity}
                      className='btn btn-primary w-100'
                    >
                      View All
                    </Link>
                  </div>
                </div>
              </div>
              <div className='pe-1'>
                <Link
                  to={routes.chat}
                  className='btn btn-outline-light bg-white btn-icon position-relative me-1'
                >
                  <i className='ti ti-brand-hipchat' />
                  <span className='chat-status-dot' />
                </Link>
              </div>
              <div className='pe-1'>
                <Link
                  onClick={toggleFullscreen}
                  to='#'
                  className='btn btn-outline-light bg-white btn-icon me-1'
                  id='btnFullscreen'
                >
                  <i className='ti ti-maximize' />
                </Link>
              </div>
              <div className='dropdown ms-1'>
                <Link
                  to='#'
                  className='dropdown-toggle d-flex align-items-center'
                  data-bs-toggle='dropdown'
                >
                  <span className='avatar avatar-md rounded'>
                    <ImageWithBasePath
                      src='assets/img/profiles/avatar-27.jpg'
                      alt='Img'
                      className='img-fluid'
                    />
                  </span>
                </Link>
                <div className='dropdown-menu'>
                  <div className='d-block'>
                    <div className='d-flex align-items-center p-2'>
                      <span className='avatar avatar-md me-2 online avatar-rounded'>
                        <ImageWithBasePath
                          src='assets/img/profiles/avatar-27.jpg'
                          alt='img'
                        />
                      </span>
                      <div>
                        <h6>{parent?.fullName || 'User'}</h6>
                        <p className='text-primary mb-0'>{role}</p>
                      </div>
                    </div>
                    <hr className='m-0' />
                    <Link
                      className='dropdown-item d-inline-flex align-items-center p-2'
                      to={routes.profile}
                    >
                      <i className='ti ti-user-circle me-2' />
                      My Profile
                    </Link>
                    <Link
                      className='dropdown-item d-inline-flex align-items-center p-2'
                      to={routes.profilesettings}
                    >
                      <i className='ti ti-settings me-2' />
                      Settings
                    </Link>
                    <hr className='m-0' />
                    <Link
                      className='dropdown-item d-inline-flex align-items-center p-2'
                      to='#'
                      onClick={handleLogout}
                    >
                      <i className='ti ti-logout me-2' />
                      Logout
                    </Link>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        {/* Mobile Menu */}
        <div className='dropdown mobile-user-menu'>
          <Link
            to='#'
            className='nav-link dropdown-toggle'
            data-bs-toggle='dropdown'
            aria-expanded='false'
          >
            <i className='fa fa-ellipsis-v' />
          </Link>
          <div className='dropdown-menu dropdown-menu-end'>
            <Link className='dropdown-item' to={routes.profile}>
              My Profile
            </Link>
            <Link className='dropdown-item' to={routes.profilesettings}>
              Settings
            </Link>
            <Link
              className='dropdown-item d-inline-flex align-items-center p-2'
              to='#'
              onClick={handleLogout}
            >
              <i className='ti ti-logout me-2' />
              Logout
            </Link>
          </div>
        </div>
        {/* /Mobile Menu */}
      </div>
      {/* /Header */}
      {showParentModal && selectedParent && (
        <ParentModal
          parent={{
            id: selectedParent.id,
            key: selectedParent.id,
            name: selectedParent.name,
            email: selectedParent.email || 'Not specified',
            phone: selectedParent.phone || 'Not specified',
            address: selectedParent.address
              ? typeof selectedParent.address === 'string'
                ? selectedParent.address
                : formatAddressObject(selectedParent.address)
              : 'Not specified',
            status: 'Active',
            imgSrc: selectedParent.image || 'assets/img/profiles/avatar-27.jpg',
            aauNumber: selectedParent.aauNumber || 'Not specified',
            relationship: 'Parent',
            DateofJoin: new Date().toISOString(),
            isCoach: false,
            role: 'parent',
          }}
          players={parentPlayers}
          onClose={() => setShowParentModal(false)}
          showModal={showParentModal}
          fetchAllGuardians={fetchAllGuardians}
        />
      )}
    </>
  );
};

export default Header;
