{"ast":null,"code":"import moment from 'moment';\nexport const formatGrade = grade => {\n  if (!grade || isNaN(grade)) return 'No Grade';\n  const suffixes = ['th', 'st', 'nd', 'rd'];\n  const v = grade % 100;\n  return `${grade}${suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]}`;\n};\nexport const calculateAge = dob => {\n  const birthDate = new Date(dob);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n  if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birthDate.getDate()) {\n    age--;\n  }\n  return age;\n};\nexport const transformPlayerData = (players, parent) => {\n  const siblingIds = parent !== null && parent !== void 0 && parent.players ? parent.players.map(p => typeof p === 'string' ? p : p._id) : [];\n  return players.map(player => {\n    const siblings = players.filter(sib => siblingIds.includes(sib._id) && sib._id !== player._id).map(sib => ({\n      id: sib._id,\n      key: sib._id,\n      name: sib.fullName,\n      gender: sib.gender,\n      dob: new Date(sib.dob).toLocaleDateString('en-US'),\n      age: calculateAge(sib.dob),\n      section: sib.schoolName || 'No School',\n      class: formatGrade(Number(sib.grade)) || 'No Grade',\n      aauNumber: sib.aauNumber || 'No AAU Number',\n      healthConcerns: sib.healthConcerns || 'No Medical History',\n      status: 'Active',\n      DateofJoin: new Date(sib.createdAt).toLocaleDateString(),\n      imgSrc: 'assets/img/profiles/avatar-27.jpg',\n      siblings: [],\n      season: sib.season,\n      registrationYear: sib.registrationYear\n    }));\n    return {\n      id: player._id,\n      key: player._id,\n      name: player.fullName,\n      gender: player.gender,\n      dob: new Date(player.dob).toLocaleDateString('en-US'),\n      age: calculateAge(player.dob),\n      section: player.schoolName || 'No School',\n      class: formatGrade(Number(player.grade)) || 'No Grade',\n      aauNumber: player.aauNumber || 'No AAU Number',\n      healthConcerns: player.healthConcerns || 'No Medical History',\n      status: 'Active',\n      DateofJoin: new Date(player.createdAt).toLocaleDateString(),\n      imgSrc: 'assets/img/profiles/avatar-27.jpg',\n      siblings,\n      season: player.season,\n      registrationYear: player.registrationYear\n    };\n  });\n};\nexport const filterPlayerData = (data, filters) => {\n  return data.filter(player => {\n    const {\n      nameFilter,\n      genderFilter,\n      gradeFilter,\n      ageFilter,\n      statusFilter,\n      dateRange,\n      seasonParam,\n      yearParam\n    } = filters;\n\n    // Season filter\n    if (seasonParam && player.season !== seasonParam) {\n      return false;\n    }\n\n    // Year filter\n    if (yearParam && player.registrationYear !== parseInt(yearParam)) {\n      return false;\n    }\n\n    // Name filter\n    if (nameFilter && !player.name.toLowerCase().includes(nameFilter.toLowerCase())) {\n      return false;\n    }\n\n    // Gender filter\n    if (genderFilter && player.gender !== genderFilter) {\n      return false;\n    }\n\n    // Grade filter\n    if (gradeFilter && player.class !== gradeFilter) {\n      return false;\n    }\n\n    // Age filter\n    if (ageFilter && player.age !== ageFilter) {\n      return false;\n    }\n\n    // Status filter\n    if (statusFilter && player.status !== statusFilter) {\n      return false;\n    }\n\n    // Date range filter\n    if (dateRange) {\n      const [start, end] = dateRange;\n      const playerDate = moment(new Date(player.DateofJoin));\n      if (!playerDate.isBetween(start, end, undefined, '[]')) {\n        return false;\n      }\n    }\n    return true;\n  });\n};\nexport const sortPlayerData = (data, sortOrder) => {\n  return [...data].sort((a, b) => {\n    if (sortOrder === 'asc') return a.name.localeCompare(b.name);\n    if (sortOrder === 'desc') return b.name.localeCompare(a.name);\n    if (sortOrder === 'recentlyAdded') {\n      return new Date(b.DateofJoin).getTime() - new Date(a.DateofJoin).getTime();\n    }\n    if (sortOrder === 'recentlyViewed') {\n      const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed') || '[]');\n      return recentlyViewed.indexOf(b.id) - recentlyViewed.indexOf(a.id);\n    }\n    return 0;\n  });\n};","map":{"version":3,"names":["moment","formatGrade","grade","isNaN","suffixes","v","calculateAge","dob","birthDate","Date","today","age","getFullYear","monthDiff","getMonth","getDate","transformPlayerData","players","parent","siblingIds","map","p","_id","player","siblings","filter","sib","includes","id","key","name","fullName","gender","toLocaleDateString","section","schoolName","class","Number","aauNumber","healthConcerns","status","DateofJoin","createdAt","imgSrc","season","registrationYear","filterPlayerData","data","filters","nameFilter","genderFilter","gradeFilter","ageFilter","statusFilter","dateRange","seasonParam","yearParam","parseInt","toLowerCase","start","end","playerDate","isBetween","undefined","sortPlayerData","sortOrder","sort","a","b","localeCompare","getTime","recentlyViewed","JSON","parse","localStorage","getItem","indexOf"],"sources":["/Users/davorins/Desktop/bs/src/utils/playerUtils.ts"],"sourcesContent":["import { PlayerTableData, PlayerFilterParams } from '../types/playerTypes';\nimport moment from 'moment';\n\ntype PlayerSortOrder =\n  | 'asc'\n  | 'desc'\n  | 'recentlyViewed'\n  | 'recentlyAdded'\n  | null;\n\nexport const formatGrade = (grade: number): string => {\n  if (!grade || isNaN(grade)) return 'No Grade';\n  const suffixes = ['th', 'st', 'nd', 'rd'];\n  const v = grade % 100;\n  return `${grade}${suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]}`;\n};\n\nexport const calculateAge = (dob: string): number => {\n  const birthDate = new Date(dob);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n\n  if (\n    monthDiff < 0 ||\n    (monthDiff === 0 && today.getDate() < birthDate.getDate())\n  ) {\n    age--;\n  }\n\n  return age;\n};\n\nexport const transformPlayerData = (\n  players: any[],\n  parent: any\n): PlayerTableData[] => {\n  const siblingIds = parent?.players\n    ? parent.players.map((p: any) => (typeof p === 'string' ? p : p._id))\n    : [];\n\n  return players.map((player) => {\n    const siblings = players\n      .filter((sib) => siblingIds.includes(sib._id) && sib._id !== player._id)\n      .map((sib) => ({\n        id: sib._id,\n        key: sib._id,\n        name: sib.fullName,\n        gender: sib.gender,\n        dob: new Date(sib.dob).toLocaleDateString('en-US'),\n        age: calculateAge(sib.dob),\n        section: sib.schoolName || 'No School',\n        class: formatGrade(Number(sib.grade)) || 'No Grade',\n        aauNumber: sib.aauNumber || 'No AAU Number',\n        healthConcerns: sib.healthConcerns || 'No Medical History',\n        status: 'Active',\n        DateofJoin: new Date(sib.createdAt).toLocaleDateString(),\n        imgSrc: 'assets/img/profiles/avatar-27.jpg',\n        siblings: [],\n        season: sib.season,\n        registrationYear: sib.registrationYear,\n      }));\n\n    return {\n      id: player._id,\n      key: player._id,\n      name: player.fullName,\n      gender: player.gender,\n      dob: new Date(player.dob).toLocaleDateString('en-US'),\n      age: calculateAge(player.dob),\n      section: player.schoolName || 'No School',\n      class: formatGrade(Number(player.grade)) || 'No Grade',\n      aauNumber: player.aauNumber || 'No AAU Number',\n      healthConcerns: player.healthConcerns || 'No Medical History',\n      status: 'Active',\n      DateofJoin: new Date(player.createdAt).toLocaleDateString(),\n      imgSrc: 'assets/img/profiles/avatar-27.jpg',\n      siblings,\n      season: player.season,\n      registrationYear: player.registrationYear,\n    };\n  });\n};\n\nexport const filterPlayerData = (\n  data: PlayerTableData[],\n  filters: PlayerFilterParams\n): PlayerTableData[] => {\n  return data.filter((player) => {\n    const {\n      nameFilter,\n      genderFilter,\n      gradeFilter,\n      ageFilter,\n      statusFilter,\n      dateRange,\n      seasonParam,\n      yearParam,\n    } = filters;\n\n    // Season filter\n    if (seasonParam && player.season !== seasonParam) {\n      return false;\n    }\n\n    // Year filter\n    if (yearParam && player.registrationYear !== parseInt(yearParam)) {\n      return false;\n    }\n\n    // Name filter\n    if (\n      nameFilter &&\n      !player.name.toLowerCase().includes(nameFilter.toLowerCase())\n    ) {\n      return false;\n    }\n\n    // Gender filter\n    if (genderFilter && player.gender !== genderFilter) {\n      return false;\n    }\n\n    // Grade filter\n    if (gradeFilter && player.class !== gradeFilter) {\n      return false;\n    }\n\n    // Age filter\n    if (ageFilter && player.age !== ageFilter) {\n      return false;\n    }\n\n    // Status filter\n    if (statusFilter && player.status !== statusFilter) {\n      return false;\n    }\n\n    // Date range filter\n    if (dateRange) {\n      const [start, end] = dateRange;\n      const playerDate = moment(new Date(player.DateofJoin));\n      if (!playerDate.isBetween(start, end, undefined, '[]')) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n\nexport const sortPlayerData = (\n  data: PlayerTableData[],\n  sortOrder: PlayerSortOrder\n): PlayerTableData[] => {\n  return [...data].sort((a, b) => {\n    if (sortOrder === 'asc') return a.name.localeCompare(b.name);\n    if (sortOrder === 'desc') return b.name.localeCompare(a.name);\n    if (sortOrder === 'recentlyAdded') {\n      return (\n        new Date(b.DateofJoin).getTime() - new Date(a.DateofJoin).getTime()\n      );\n    }\n    if (sortOrder === 'recentlyViewed') {\n      const recentlyViewed = JSON.parse(\n        localStorage.getItem('recentlyViewed') || '[]'\n      );\n      return recentlyViewed.indexOf(b.id) - recentlyViewed.indexOf(a.id);\n    }\n    return 0;\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}