{"ast":null,"code":"var _jsxFileName = \"/Users/davorins/Desktop/bs/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { all_routes } from '../feature-module/router/all_routes';\nimport { registerUser } from '../services/authService';\nimport axios from 'axios';\nimport { getCurrentSeason } from '../utils/season';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconsole.log('API_BASE_URL:', process.env.REACT_APP_API_BASE_URL);\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [parent, setParent] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const [allParents, setAllParents] = useState([]);\n  const [parents, setParents] = useState([]);\n  const [allGuardians] = useState([]);\n  const authCheckInProgress = useRef(false);\n  const lastAuthCheckTime = useRef(0);\n  const lastParentId = useRef(null);\n  const searchAll = useCallback(async term => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return [];\n      const response = await axios.get(`${API_BASE_URL}/search/all`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        params: {\n          q: term\n        }\n      });\n\n      // Transform the response to match SearchResult\n      return response.data.map(item => ({\n        id: item._id || item.id,\n        type: item.type,\n        name: item.fullName || item.name,\n        gender: item.gender,\n        grade: item.grade,\n        dob: item.dob,\n        aauNumber: item.aauNumber,\n        phone: item.phone,\n        address: item.address,\n        email: item.email,\n        image: item.image || item.profileImage,\n        additionalInfo: item.schoolName || item.additionalInfo,\n        createdAt: item.createdAt\n      }));\n    } catch (error) {\n      console.error('Search error:', error);\n      return [];\n    }\n  }, []);\n  const logout = useCallback(() => {\n    console.log('Starting logout...');\n    localStorage.removeItem('token');\n    console.log('Token removed from localStorage');\n    localStorage.removeItem('parentId');\n    localStorage.removeItem('parent');\n    console.log('Parent data removed from localStorage');\n    setIsAuthenticated(false);\n    console.log('isAuthenticated set to false');\n    setParent(null);\n    console.log('Parent set to null');\n    navigate('/login');\n    console.log('Redirected to login page');\n  }, [navigate]);\n  const fetchPlayersData = useCallback(async (playerIds, queryParams = '') => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      const decoded = jwtDecode(token);\n      const isAdmin = decoded.role === 'admin';\n      let url = `${API_BASE_URL}/players`;\n      if (isAdmin && playerIds.length === 0) {\n        url += `?${queryParams}`;\n      } else {\n        url += `?ids=${playerIds.join(',')}`;\n        if (queryParams) {\n          url += `&${queryParams}`;\n        }\n      }\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPlayers(response.data);\n    } catch (error) {\n      console.error('Error fetching players data:', error);\n    }\n  }, []);\n  const fetchPlayerData = useCallback(async playerId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.get(`${API_BASE_URL}/player/${playerId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching player data:', error);\n      return null;\n    }\n  }, []);\n  const fetchAllPlayers = useCallback(async (queryParams = '') => {\n    try {\n      console.log('Fetching all players with params:', queryParams);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log('No token found');\n        return;\n      }\n      const url = `${API_BASE_URL}/players?${queryParams}`;\n      console.log('Request URL:', url);\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('API response:', response.data);\n      setPlayers(response.data);\n    } catch (error) {\n      console.error('Error fetching all players:', error);\n    }\n  }, []);\n  const setParentData = fetchedParent => {\n    // Preserve existing role if available\n    const currentRole = parent === null || parent === void 0 ? void 0 : parent.role;\n    const parentData = {\n      _id: fetchedParent._id || fetchedParent.parentId || '',\n      email: fetchedParent.email || '',\n      fullName: fetchedParent.fullName || '',\n      role: currentRole || fetchedParent.role || 'Parent',\n      // Preserve existing role\n      phone: fetchedParent.phone || '',\n      address: typeof fetchedParent.address === 'object' ? `${fetchedParent.address.street}, ${fetchedParent.address.city}, ${fetchedParent.address.state} ${fetchedParent.address.zip}` : fetchedParent.address || '',\n      relationship: fetchedParent.relationship || '',\n      players: Array.isArray(fetchedParent.players) ? fetchedParent.players.filter(p => typeof p === 'object' && p._id) : [],\n      isCoach: fetchedParent.isCoach || false,\n      aauNumber: fetchedParent.aauNumber || '',\n      additionalGuardians: fetchedParent.additionalGuardians || []\n    };\n    console.log('Updating parent with role:', parentData.role); // Debug log\n    setParent(parentData);\n  };\n  const fetchParentData = useCallback(async parentId => {\n    try {\n      var _updatedData$players;\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No auth token');\n        return null;\n      }\n      const decoded = jwtDecode(token);\n      const isAdmin = decoded.role === 'admin';\n\n      // Don't fetch if admin is viewing their own context\n      if (isAdmin && parentId === decoded.id) {\n        return parent;\n      }\n      const response = await axios.get(`${API_BASE_URL}/parent/${parentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const parentData = response.data;\n\n      // Preserve admin role when viewing other parents\n      const updatedData = isAdmin ? {\n        ...parentData,\n        role: 'admin'\n      } : parentData;\n      setParentData(updatedData);\n\n      // Fetch players if needed\n      const playerIds = ((_updatedData$players = updatedData.players) === null || _updatedData$players === void 0 ? void 0 : _updatedData$players.map(p => typeof p === 'string' ? p : p._id)) || [];\n      if (playerIds.length > 0) {\n        await fetchPlayersData(playerIds);\n      }\n      return updatedData;\n    } catch (error) {\n      console.error('Error fetching parent:', error);\n      return null;\n    }\n  }, [fetchPlayersData, parent]);\n  const fetchGuardians = useCallback(async playerId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.get(`${API_BASE_URL}/player/${playerId}/guardians`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching guardians:', error);\n      return [];\n    }\n  }, []);\n  const fetchAllParents = useCallback(async (queryParams = '') => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return [];\n      const response = await axios.get(`${API_BASE_URL}/parents?${queryParams}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAllParents(response.data);\n      setParents(response.data); // Also update the parents state\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching parents:', error);\n      return [];\n    }\n  }, []);\n  const fetchParentsData = useCallback(async parentId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error('No authentication token found');\n      setIsLoading(true);\n      let url = `${API_BASE_URL}/parents`;\n      if (parentId) {\n        url = `${API_BASE_URL}/parent/${parentId}`;\n        const response = await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setParents([response.data]);\n      } else {\n        const response = await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setParents(response.data);\n        setAllParents(response.data); // Update allParents at the same time\n      }\n    } catch (error) {\n      console.error('Error fetching parents:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Add this to your AuthContext.tsx\n  const fetchParentPlayers = async parentId => {\n    try {\n      // Validate parentId\n      if (!parentId || !/^[0-9a-fA-F]{24}$/.test(parentId)) {\n        console.error('Invalid parentId provided:', parentId);\n        return [];\n      }\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No authentication token found');\n        return [];\n      }\n\n      // First try to get parent with populated players\n      try {\n        var _parentRes$data;\n        const parentRes = await axios.get(`${API_BASE_URL}/parent/${parentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // If players are populated and valid, return them\n        if ((_parentRes$data = parentRes.data) !== null && _parentRes$data !== void 0 && _parentRes$data.players && Array.isArray(parentRes.data.players)) {\n          return parentRes.data.players;\n        }\n      } catch (parentError) {\n        console.log('Parent endpoint failed, trying players endpoint...');\n      }\n\n      // Fallback to direct players endpoint\n      const playersRes = await axios.get(`${API_BASE_URL}/parent/${parentId}/players`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Handle different response formats\n      return Array.isArray(playersRes.data) ? playersRes.data : playersRes.data.players || [];\n    } catch (error) {\n      console.error(`Error fetching players for parent ${parentId}:`, error);\n      return []; // Return empty array on error\n    }\n  };\n  const fetchAllGuardians = useCallback(async (queryParams = '') => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return [];\n      const response = await axios.get(`${API_BASE_URL}/guardians?${queryParams}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching guardians:', error);\n      return [];\n    }\n  }, []);\n  const checkAuth = useCallback(async () => {\n    // Skip if already in progress or checked recently\n    if (authCheckInProgress.current || Date.now() - lastAuthCheckTime.current < 1000) {\n      return;\n    }\n    authCheckInProgress.current = true;\n    lastAuthCheckTime.current = Date.now();\n    const token = localStorage.getItem('token');\n    const parentIdFromStorage = localStorage.getItem('parentId');\n    const role = localStorage.getItem('role');\n    const currentParentId = parent === null || parent === void 0 ? void 0 : parent._id;\n    try {\n      // Clear auth if no token\n      if (!token) {\n        setIsAuthenticated(false);\n        setParent(null);\n        setIsLoading(false);\n        return;\n      }\n      const decoded = jwtDecode(token);\n      const isTokenValid = !(decoded.exp && decoded.exp * 1000 < Date.now());\n      if (!isTokenValid) {\n        logout();\n        return;\n      }\n      setIsAuthenticated(true);\n\n      // Admin user flow\n      if (role === 'Admin') {\n        if (currentParentId === 'admin') return;\n        const adminData = {\n          _id: 'admin',\n          email: decoded.email || '',\n          fullName: decoded.fullName || 'Administrator',\n          role: 'Admin',\n          phone: '',\n          address: '',\n          relationship: '',\n          players: [],\n          isCoach: false,\n          aauNumber: '',\n          additionalGuardians: []\n        };\n        setParent(adminData);\n        lastParentId.current = 'admin';\n      }\n\n      // Regular parent user flow\n      else if (parentIdFromStorage) {\n        setIsLoading(true);\n        try {\n          const parentData = await fetchParentData(parentIdFromStorage);\n          if (!parentData) {\n            const fallbackParent = {\n              _id: decoded.id,\n              email: decoded.email || '',\n              fullName: decoded.fullName || '',\n              role: decoded.role || 'Parent',\n              phone: decoded.phone || '',\n              address: typeof decoded.address === 'string' ? decoded.address : decoded.address ? `${decoded.address.street}, ${decoded.address.city}, ${decoded.address.state} ${decoded.address.zip}` : '',\n              relationship: decoded.relationship || '',\n              players: decoded.players || [],\n              isCoach: decoded.isCoach || false,\n              aauNumber: decoded.aauNumber || '',\n              additionalGuardians: decoded.additionalGuardians || []\n            };\n            setParent(fallbackParent);\n          } else {\n            setParent({\n              ...parentData,\n              email: parentData.email || decoded.email || '',\n              fullName: parentData.fullName || decoded.fullName || ''\n            });\n          }\n          lastParentId.current = parentIdFromStorage;\n        } catch (error) {\n          console.error('Failed to fetch parent data:', error);\n          const fallbackParent = {\n            _id: decoded.id,\n            email: decoded.email || '',\n            fullName: decoded.fullName || '',\n            role: decoded.role || 'Parent',\n            phone: decoded.phone || '',\n            address: typeof decoded.address === 'string' ? decoded.address : decoded.address ? `${decoded.address.street}, ${decoded.address.city}, ${decoded.address.state} ${decoded.address.zip}` : '',\n            relationship: decoded.relationship || '',\n            players: decoded.players || [],\n            isCoach: decoded.isCoach || false,\n            aauNumber: decoded.aauNumber || '',\n            additionalGuardians: decoded.additionalGuardians || []\n          };\n          setParent(fallbackParent);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      logout();\n    } finally {\n      authCheckInProgress.current = false;\n    }\n  }, [logout, fetchParentData, parent === null || parent === void 0 ? void 0 : parent._id]);\n  const refreshAuthData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      lastParentId.current = null; // Force complete reload\n      await checkAuth();\n    } finally {\n      setIsLoading(false);\n    }\n  }, [checkAuth]);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      await checkAuth();\n    };\n    initializeAuth();\n    const refreshInterval = setInterval(checkAuth, 300000);\n    return () => clearInterval(refreshInterval);\n  }, [checkAuth]);\n  const login = async (email, password) => {\n    try {\n      const payload = {\n        email: email,\n        password: password\n      };\n      console.log('Login Payload:', payload);\n      const response = await axios.post(`${API_BASE_URL}/login`, payload);\n      console.log('Login Response:', response.data);\n      const {\n        token,\n        parent\n      } = response.data;\n\n      // Add validation before storing\n      if (!(parent !== null && parent !== void 0 && parent._id)) {\n        throw new Error('Invalid parent data received from server');\n      }\n      localStorage.setItem('token', token);\n      localStorage.setItem('parentId', parent._id);\n      localStorage.setItem('parent', JSON.stringify(parent));\n      setIsAuthenticated(true);\n      const parentData = {\n        _id: parent._id,\n        email: parent.email,\n        fullName: parent.fullName,\n        role: parent.role || 'Parent',\n        phone: parent.phone || '',\n        address: parent.address || '',\n        relationship: parent.relationship || '',\n        players: parent.players || [],\n        isCoach: parent.isCoach || false,\n        aauNumber: parent.aauNumber || '',\n        additionalGuardians: parent.additionalGuardians || [],\n        createdAt: parent.createdAt || new Date().toISOString(),\n        updatedAt: parent.updatedAt || new Date().toISOString()\n      };\n      setParent(parentData);\n      navigate(all_routes.adminDashboard);\n    } catch (error) {\n      console.error('Login Error:', error);\n      if (axios.isAxiosError(error)) {\n        var _error$response, _error$response2, _error$response2$data;\n        console.error('Error Response Data:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed. Please try again.');\n      } else {\n        alert('Login failed. Please try again.');\n      }\n    }\n  };\n  const register = async (email, password, fullName, phone, address, relationship, isCoach, aauNumber, agreeToTerms) => {\n    try {\n      // Parse the address string into components for validation\n      const parsedAddress = parseAddress(address);\n\n      // Validate the parsed address\n      if (!validateAddress(parsedAddress)) {\n        throw new Error('Please enter a complete address (Street, City, State ZIP)');\n      }\n\n      // Format the address consistently before sending to backend\n      const formattedAddress = formatAddressForBackend(parsedAddress);\n\n      // Normalize and trim credentials\n      const normalizedEmail = email.toLowerCase().trim();\n      const trimmedPassword = password.trim();\n      const data = await registerUser({\n        email: normalizedEmail,\n        // Use normalized email\n        password: trimmedPassword,\n        // Use trimmed password\n        fullName,\n        phone,\n        address: formattedAddress,\n        // Send the formatted string\n        relationship,\n        isCoach,\n        aauNumber,\n        agreeToTerms\n      });\n      if (!data.parent) {\n        throw new Error('Parent data not found in response');\n      }\n\n      // Store the parsed address in local storage for future use\n      const parentWithParsedAddress = {\n        ...data.parent,\n        address: parsedAddress // Store the parsed object locally\n      };\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('parentId', data.parent._id);\n      localStorage.setItem('parent', JSON.stringify(parentWithParsedAddress));\n      setIsAuthenticated(true);\n      const parentData = {\n        _id: data.parent._id,\n        email: data.parent.email,\n        fullName: data.parent.fullName,\n        role: data.parent.role || 'Parent',\n        phone: data.parent.phone || '',\n        address: parsedAddress,\n        // Use the parsed address object\n        relationship: data.parent.relationship || '',\n        players: data.parent.players || [],\n        isCoach: data.parent.isCoach || false,\n        aauNumber: data.parent.aauNumber || '',\n        additionalGuardians: data.parent.additionalGuardians || [],\n        createdAt: data.parent.createdAt || new Date().toISOString(),\n        updatedAt: data.parent.updatedAt || new Date().toISOString()\n      };\n      setParent(parentData);\n      navigate(all_routes.adminDashboard);\n    } catch (error) {\n      console.error('Registration Error:', error);\n      throw error; // Re-throw to allow the form to handle the error\n    }\n  };\n  const [registrationStatus, setRegistrationStatus] = useState({\n    parentRegistered: false,\n    parentPaid: false,\n    currentSeason: getCurrentSeason(),\n    hasPlayers: false,\n    hasCurrentSeasonPlayers: false,\n    allPlayersPaid: false\n  });\n\n  // Helper functions for address handling\n  const parseAddress = fullAddress => {\n    // First try pattern with unit designator\n    const patternWithUnit = /^(\\d+\\s[\\w\\s\\.]+?)\\s*(?:,?\\s*(apt|apartment|suite|ste|unit|building|bldg|floor|fl|room|rm|department|dept|lot|#)\\.?\\s*([\\w\\s\\-]+?)\\s*)?,\\s*([^,]+?)\\s*,\\s*([a-zA-Z]{2,})\\s*(\\d{5}(?:-\\d{4})?)$/i;\n    const matchWithUnit = fullAddress.match(patternWithUnit);\n    if (matchWithUnit) {\n      return {\n        street: matchWithUnit[1].trim(),\n        street2: matchWithUnit[2] && matchWithUnit[3] ? `${matchWithUnit[2].trim()} ${matchWithUnit[3].trim()}`.replace(/\\s+/g, ' ') : '',\n        city: matchWithUnit[4].trim(),\n        state: normalizeState(matchWithUnit[5].trim()),\n        zip: matchWithUnit[6].trim()\n      };\n    }\n\n    // Fallback pattern for addresses without unit designators\n    const fallbackPattern = /^([^,]+?)\\s*,\\s*([^,]+?)\\s*,\\s*([a-zA-Z]{2,})\\s*(\\d{5}(?:-\\d{4})?)$/i;\n    const fallbackMatch = fullAddress.match(fallbackPattern);\n    if (fallbackMatch) {\n      return {\n        street: fallbackMatch[1].trim(),\n        street2: '',\n        city: fallbackMatch[2].trim(),\n        state: normalizeState(fallbackMatch[3].trim()),\n        zip: fallbackMatch[4].trim()\n      };\n    }\n\n    // If all parsing fails, return the raw address in street\n    return {\n      street: fullAddress,\n      street2: '',\n      city: '',\n      state: '',\n      zip: ''\n    };\n  };\n  const normalizeState = stateInput => {\n    const stateMap = {\n      alabama: 'AL',\n      alaska: 'AK',\n      arizona: 'AZ',\n      arkansas: 'AR',\n      california: 'CA',\n      colorado: 'CO',\n      connecticut: 'CT',\n      delaware: 'DE',\n      florida: 'FL',\n      georgia: 'GA',\n      hawaii: 'HI',\n      idaho: 'ID',\n      illinois: 'IL',\n      indiana: 'IN',\n      iowa: 'IA',\n      kansas: 'KS',\n      kentucky: 'KY',\n      louisiana: 'LA',\n      maine: 'ME',\n      maryland: 'MD',\n      massachusetts: 'MA',\n      michigan: 'MI',\n      minnesota: 'MN',\n      mississippi: 'MS',\n      missouri: 'MO',\n      montana: 'MT',\n      nebraska: 'NE',\n      nevada: 'NV',\n      'new hampshire': 'NH',\n      'new jersey': 'NJ',\n      'new mexico': 'NM',\n      'new york': 'NY',\n      'north carolina': 'NC',\n      'north dakota': 'ND',\n      ohio: 'OH',\n      oklahoma: 'OK',\n      oregon: 'OR',\n      pennsylvania: 'PA',\n      'rhode island': 'RI',\n      'south carolina': 'SC',\n      'south dakota': 'SD',\n      tennessee: 'TN',\n      texas: 'TX',\n      utah: 'UT',\n      vermont: 'VT',\n      virginia: 'VA',\n      washington: 'WA',\n      'west virginia': 'WV',\n      wisconsin: 'WI',\n      wyoming: 'WY'\n    };\n    const normalizedInput = stateInput.toLowerCase().trim();\n    return stateMap[normalizedInput] || stateInput.toUpperCase();\n  };\n  const validateAddress = address => {\n    return !!address.street && !!address.city && !!address.state && !!address.zip;\n  };\n  const formatAddressForBackend = address => {\n    return `${address.street}${address.street2 ? ', ' + address.street2 : ''}, ${address.city}, ${address.state} ${address.zip}`;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      parent,\n      user: parent,\n      players,\n      parents,\n      setPlayers,\n      allParents,\n      login,\n      logout,\n      register,\n      fetchParentData,\n      fetchPlayersData,\n      fetchPlayerData,\n      fetchAllPlayers,\n      fetchAllParents,\n      fetchGuardians,\n      checkAuth,\n      role: (parent === null || parent === void 0 ? void 0 : parent.role) || 'Parent',\n      isLoading,\n      searchAll,\n      fetchParentsData,\n      fetchParentPlayers,\n      fetchAllGuardians,\n      allGuardians,\n      currentUser: parent,\n      refreshAuthData,\n      registrationStatus,\n      setRegistrationStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 809,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"82Or5QVanTWBVexlEimUGSucr6Q=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","useRef","useNavigate","jwtDecode","all_routes","registerUser","axios","getCurrentSeason","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","console","log","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","parent","setParent","players","setPlayers","isLoading","setIsLoading","navigate","allParents","setAllParents","parents","setParents","allGuardians","authCheckInProgress","lastAuthCheckTime","lastParentId","searchAll","term","token","localStorage","getItem","response","get","headers","Authorization","params","q","data","map","item","id","_id","type","name","fullName","gender","grade","dob","aauNumber","phone","address","email","image","profileImage","additionalInfo","schoolName","createdAt","error","logout","removeItem","fetchPlayersData","playerIds","queryParams","decoded","isAdmin","role","url","length","join","fetchPlayerData","playerId","Error","fetchAllPlayers","setParentData","fetchedParent","currentRole","parentData","parentId","street","city","state","zip","relationship","Array","isArray","filter","p","isCoach","additionalGuardians","fetchParentData","_updatedData$players","updatedData","fetchGuardians","fetchAllParents","fetchParentsData","fetchParentPlayers","test","_parentRes$data","parentRes","parentError","playersRes","fetchAllGuardians","checkAuth","current","Date","now","parentIdFromStorage","currentParentId","isTokenValid","exp","adminData","fallbackParent","refreshAuthData","initializeAuth","refreshInterval","setInterval","clearInterval","login","password","payload","post","setItem","JSON","stringify","toISOString","updatedAt","adminDashboard","isAxiosError","_error$response","_error$response2","_error$response2$data","alert","register","agreeToTerms","parsedAddress","parseAddress","validateAddress","formattedAddress","formatAddressForBackend","normalizedEmail","toLowerCase","trim","trimmedPassword","parentWithParsedAddress","registrationStatus","setRegistrationStatus","parentRegistered","parentPaid","currentSeason","hasPlayers","hasCurrentSeasonPlayers","allPlayersPaid","fullAddress","patternWithUnit","matchWithUnit","match","street2","replace","normalizeState","fallbackPattern","fallbackMatch","stateInput","stateMap","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","georgia","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","normalizedInput","toUpperCase","Provider","value","user","currentUser","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/davorins/Desktop/bs/src/context/AuthContext.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { all_routes } from '../feature-module/router/all_routes';\nimport { registerUser } from '../services/authService';\nimport axios from 'axios';\nimport {\n  Parent,\n  Guardian,\n  Player,\n  SearchResult,\n  DecodedToken,\n  AuthContextType,\n  RegistrationStatus,\n} from '../types/types';\nimport { getCurrentSeason } from '../utils/season';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconsole.log('API_BASE_URL:', process.env.REACT_APP_API_BASE_URL);\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [parent, setParent] = useState<Parent | null>(null);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const [allParents, setAllParents] = useState<Parent[]>([]);\n  const [parents, setParents] = useState<Parent[]>([]);\n  const [allGuardians] = useState<Guardian[]>([]);\n  const authCheckInProgress = useRef(false);\n  const lastAuthCheckTime = useRef<number>(0);\n  const lastParentId = useRef<string | null>(null);\n\n  const searchAll = useCallback(\n    async (term: string): Promise<SearchResult[]> => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return [];\n\n        const response = await axios.get(`${API_BASE_URL}/search/all`, {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { q: term },\n        });\n\n        // Transform the response to match SearchResult\n        return response.data.map((item: any) => ({\n          id: item._id || item.id,\n          type: item.type,\n          name: item.fullName || item.name,\n          gender: item.gender,\n          grade: item.grade,\n          dob: item.dob,\n          aauNumber: item.aauNumber,\n          phone: item.phone,\n          address: item.address,\n          email: item.email,\n          image: item.image || item.profileImage,\n          additionalInfo: item.schoolName || item.additionalInfo,\n          createdAt: item.createdAt,\n        }));\n      } catch (error) {\n        console.error('Search error:', error);\n        return [];\n      }\n    },\n    []\n  );\n\n  const logout = useCallback(() => {\n    console.log('Starting logout...');\n    localStorage.removeItem('token');\n    console.log('Token removed from localStorage');\n    localStorage.removeItem('parentId');\n    localStorage.removeItem('parent');\n    console.log('Parent data removed from localStorage');\n    setIsAuthenticated(false);\n    console.log('isAuthenticated set to false');\n    setParent(null);\n    console.log('Parent set to null');\n    navigate('/login');\n    console.log('Redirected to login page');\n  }, [navigate]);\n\n  const fetchPlayersData = useCallback(\n    async (playerIds: string[], queryParams = '') => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n\n        const decoded = jwtDecode<DecodedToken>(token);\n        const isAdmin = decoded.role === 'admin';\n\n        let url = `${API_BASE_URL}/players`;\n        if (isAdmin && playerIds.length === 0) {\n          url += `?${queryParams}`;\n        } else {\n          url += `?ids=${playerIds.join(',')}`;\n          if (queryParams) {\n            url += `&${queryParams}`;\n          }\n        }\n\n        const response = await axios.get<Player[]>(url, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        setPlayers(response.data);\n      } catch (error) {\n        console.error('Error fetching players data:', error);\n      }\n    },\n    []\n  );\n\n  const fetchPlayerData = useCallback(async (playerId: string) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n\n      const response = await axios.get<Player>(\n        `${API_BASE_URL}/player/${playerId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching player data:', error);\n      return null;\n    }\n  }, []);\n\n  const fetchAllPlayers = useCallback(async (queryParams = '') => {\n    try {\n      console.log('Fetching all players with params:', queryParams);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log('No token found');\n        return;\n      }\n\n      const url = `${API_BASE_URL}/players?${queryParams}`;\n      console.log('Request URL:', url);\n\n      const response = await axios.get<Player[]>(url, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      console.log('API response:', response.data);\n      setPlayers(response.data);\n    } catch (error) {\n      console.error('Error fetching all players:', error);\n    }\n  }, []);\n\n  const setParentData = (fetchedParent: Parent | any) => {\n    // Preserve existing role if available\n    const currentRole = parent?.role;\n\n    const parentData: Parent = {\n      _id: fetchedParent._id || fetchedParent.parentId || '',\n      email: fetchedParent.email || '',\n      fullName: fetchedParent.fullName || '',\n      role: currentRole || fetchedParent.role || 'Parent', // Preserve existing role\n      phone: fetchedParent.phone || '',\n      address:\n        typeof fetchedParent.address === 'object'\n          ? `${fetchedParent.address.street}, ${fetchedParent.address.city}, ${fetchedParent.address.state} ${fetchedParent.address.zip}`\n          : fetchedParent.address || '',\n      relationship: fetchedParent.relationship || '',\n      players: Array.isArray(fetchedParent.players)\n        ? fetchedParent.players.filter(\n            (p: any) => typeof p === 'object' && p._id\n          )\n        : [],\n      isCoach: fetchedParent.isCoach || false,\n      aauNumber: fetchedParent.aauNumber || '',\n      additionalGuardians: fetchedParent.additionalGuardians || [],\n    };\n\n    console.log('Updating parent with role:', parentData.role); // Debug log\n    setParent(parentData);\n  };\n\n  const fetchParentData = useCallback(\n    async (parentId: string): Promise<Parent | null> => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('No auth token');\n          return null;\n        }\n\n        const decoded = jwtDecode<DecodedToken>(token);\n        const isAdmin = decoded.role === 'admin';\n\n        // Don't fetch if admin is viewing their own context\n        if (isAdmin && parentId === decoded.id) {\n          return parent;\n        }\n\n        const response = await axios.get<Parent>(\n          `${API_BASE_URL}/parent/${parentId}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n\n        const parentData = response.data;\n\n        // Preserve admin role when viewing other parents\n        const updatedData = isAdmin\n          ? { ...parentData, role: 'admin' }\n          : parentData;\n\n        setParentData(updatedData);\n\n        // Fetch players if needed\n        const playerIds =\n          updatedData.players?.map((p) =>\n            typeof p === 'string' ? p : p._id\n          ) || [];\n        if (playerIds.length > 0) {\n          await fetchPlayersData(playerIds);\n        }\n\n        return updatedData;\n      } catch (error) {\n        console.error('Error fetching parent:', error);\n        return null;\n      }\n    },\n    [fetchPlayersData, parent]\n  );\n\n  const fetchGuardians = useCallback(async (playerId: string) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n\n      const response = await axios.get<Guardian[]>(\n        `${API_BASE_URL}/player/${playerId}/guardians`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching guardians:', error);\n      return [];\n    }\n  }, []);\n\n  const fetchAllParents = useCallback(async (queryParams = '') => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return [];\n\n      const response = await axios.get<Parent[]>(\n        `${API_BASE_URL}/parents?${queryParams}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      setAllParents(response.data);\n      setParents(response.data); // Also update the parents state\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching parents:', error);\n      return [];\n    }\n  }, []);\n\n  const fetchParentsData = useCallback(async (parentId?: string) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error('No authentication token found');\n\n      setIsLoading(true);\n\n      let url = `${API_BASE_URL}/parents`;\n      if (parentId) {\n        url = `${API_BASE_URL}/parent/${parentId}`;\n        const response = await axios.get<Parent>(url, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setParents([response.data]);\n      } else {\n        const response = await axios.get<Parent[]>(url, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setParents(response.data);\n        setAllParents(response.data); // Update allParents at the same time\n      }\n    } catch (error) {\n      console.error('Error fetching parents:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Add this to your AuthContext.tsx\n  const fetchParentPlayers = async (parentId: string): Promise<Player[]> => {\n    try {\n      // Validate parentId\n      if (!parentId || !/^[0-9a-fA-F]{24}$/.test(parentId)) {\n        console.error('Invalid parentId provided:', parentId);\n        return [];\n      }\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No authentication token found');\n        return [];\n      }\n\n      // First try to get parent with populated players\n      try {\n        const parentRes = await axios.get<{ players?: Player[] }>(\n          `${API_BASE_URL}/parent/${parentId}`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        // If players are populated and valid, return them\n        if (parentRes.data?.players && Array.isArray(parentRes.data.players)) {\n          return parentRes.data.players;\n        }\n      } catch (parentError) {\n        console.log('Parent endpoint failed, trying players endpoint...');\n      }\n\n      // Fallback to direct players endpoint\n      const playersRes = await axios.get<Player[] | { players: Player[] }>(\n        `${API_BASE_URL}/parent/${parentId}/players`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      // Handle different response formats\n      return Array.isArray(playersRes.data)\n        ? playersRes.data\n        : playersRes.data.players || [];\n    } catch (error) {\n      console.error(`Error fetching players for parent ${parentId}:`, error);\n      return []; // Return empty array on error\n    }\n  };\n\n  const fetchAllGuardians = useCallback(async (queryParams = '') => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return [];\n\n      const response = await axios.get<Guardian[]>(\n        `${API_BASE_URL}/guardians?${queryParams}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching guardians:', error);\n      return [];\n    }\n  }, []);\n\n  const checkAuth = useCallback(async () => {\n    // Skip if already in progress or checked recently\n    if (\n      authCheckInProgress.current ||\n      Date.now() - lastAuthCheckTime.current < 1000\n    ) {\n      return;\n    }\n\n    authCheckInProgress.current = true;\n    lastAuthCheckTime.current = Date.now();\n\n    const token = localStorage.getItem('token');\n    const parentIdFromStorage = localStorage.getItem('parentId');\n    const role = localStorage.getItem('role');\n    const currentParentId = parent?._id;\n\n    try {\n      // Clear auth if no token\n      if (!token) {\n        setIsAuthenticated(false);\n        setParent(null);\n        setIsLoading(false);\n        return;\n      }\n\n      const decoded = jwtDecode<DecodedToken>(token);\n      const isTokenValid = !(decoded.exp && decoded.exp * 1000 < Date.now());\n\n      if (!isTokenValid) {\n        logout();\n        return;\n      }\n\n      setIsAuthenticated(true);\n\n      // Admin user flow\n      if (role === 'Admin') {\n        if (currentParentId === 'admin') return;\n\n        const adminData: Parent = {\n          _id: 'admin',\n          email: decoded.email || '',\n          fullName: decoded.fullName || 'Administrator',\n          role: 'Admin',\n          phone: '',\n          address: '',\n          relationship: '',\n          players: [],\n          isCoach: false,\n          aauNumber: '',\n          additionalGuardians: [],\n        };\n\n        setParent(adminData);\n        lastParentId.current = 'admin';\n      }\n\n      // Regular parent user flow\n      else if (parentIdFromStorage) {\n        setIsLoading(true);\n\n        try {\n          const parentData = await fetchParentData(parentIdFromStorage);\n\n          if (!parentData) {\n            const fallbackParent: Parent = {\n              _id: decoded.id,\n              email: decoded.email || '',\n              fullName: decoded.fullName || '',\n              role: decoded.role || 'Parent',\n              phone: decoded.phone || '',\n              address:\n                typeof decoded.address === 'string'\n                  ? decoded.address\n                  : decoded.address\n                  ? `${decoded.address.street}, ${decoded.address.city}, ${decoded.address.state} ${decoded.address.zip}`\n                  : '',\n              relationship: decoded.relationship || '',\n              players: decoded.players || [],\n              isCoach: decoded.isCoach || false,\n              aauNumber: decoded.aauNumber || '',\n              additionalGuardians: decoded.additionalGuardians || [],\n            };\n\n            setParent(fallbackParent);\n          } else {\n            setParent({\n              ...parentData,\n              email: parentData.email || decoded.email || '',\n              fullName: parentData.fullName || decoded.fullName || '',\n            });\n          }\n\n          lastParentId.current = parentIdFromStorage;\n        } catch (error) {\n          console.error('Failed to fetch parent data:', error);\n\n          const fallbackParent: Parent = {\n            _id: decoded.id,\n            email: decoded.email || '',\n            fullName: decoded.fullName || '',\n            role: decoded.role || 'Parent',\n            phone: decoded.phone || '',\n            address:\n              typeof decoded.address === 'string'\n                ? decoded.address\n                : decoded.address\n                ? `${decoded.address.street}, ${decoded.address.city}, ${decoded.address.state} ${decoded.address.zip}`\n                : '',\n            relationship: decoded.relationship || '',\n            players: decoded.players || [],\n            isCoach: decoded.isCoach || false,\n            aauNumber: decoded.aauNumber || '',\n            additionalGuardians: decoded.additionalGuardians || [],\n          };\n\n          setParent(fallbackParent);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      logout();\n    } finally {\n      authCheckInProgress.current = false;\n    }\n  }, [logout, fetchParentData, parent?._id]);\n\n  const refreshAuthData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      lastParentId.current = null; // Force complete reload\n      await checkAuth();\n    } finally {\n      setIsLoading(false);\n    }\n  }, [checkAuth]);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      await checkAuth();\n    };\n    initializeAuth();\n\n    const refreshInterval = setInterval(checkAuth, 300000);\n    return () => clearInterval(refreshInterval);\n  }, [checkAuth]);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const payload = {\n        email: email,\n        password: password,\n      };\n      console.log('Login Payload:', payload);\n\n      const response = await axios.post(`${API_BASE_URL}/login`, payload);\n      console.log('Login Response:', response.data);\n\n      const { token, parent } = response.data;\n\n      // Add validation before storing\n      if (!parent?._id) {\n        throw new Error('Invalid parent data received from server');\n      }\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('parentId', parent._id);\n      localStorage.setItem('parent', JSON.stringify(parent));\n\n      setIsAuthenticated(true);\n      const parentData: Parent = {\n        _id: parent._id,\n        email: parent.email,\n        fullName: parent.fullName,\n        role: parent.role || 'Parent',\n        phone: parent.phone || '',\n        address: parent.address || '',\n        relationship: parent.relationship || '',\n        players: parent.players || [],\n        isCoach: parent.isCoach || false,\n        aauNumber: parent.aauNumber || '',\n        additionalGuardians: parent.additionalGuardians || [],\n        createdAt: parent.createdAt || new Date().toISOString(),\n        updatedAt: parent.updatedAt || new Date().toISOString(),\n      };\n      setParent(parentData);\n\n      navigate(all_routes.adminDashboard);\n    } catch (error) {\n      console.error('Login Error:', error);\n      if (axios.isAxiosError(error)) {\n        console.error('Error Response Data:', error.response?.data);\n        alert(error.response?.data?.error || 'Login failed. Please try again.');\n      } else {\n        alert('Login failed. Please try again.');\n      }\n    }\n  };\n\n  const register = async (\n    email: string,\n    password: string,\n    fullName: string,\n    phone: string,\n    address: string, // Still accepts string to maintain backend compatibility\n    relationship: string,\n    isCoach: boolean,\n    aauNumber: string,\n    agreeToTerms: boolean\n  ) => {\n    try {\n      // Parse the address string into components for validation\n      const parsedAddress = parseAddress(address);\n\n      // Validate the parsed address\n      if (!validateAddress(parsedAddress)) {\n        throw new Error(\n          'Please enter a complete address (Street, City, State ZIP)'\n        );\n      }\n\n      // Format the address consistently before sending to backend\n      const formattedAddress = formatAddressForBackend(parsedAddress);\n\n      // Normalize and trim credentials\n      const normalizedEmail = email.toLowerCase().trim();\n      const trimmedPassword = password.trim();\n\n      const data = await registerUser({\n        email: normalizedEmail, // Use normalized email\n        password: trimmedPassword, // Use trimmed password\n        fullName,\n        phone,\n        address: formattedAddress, // Send the formatted string\n        relationship,\n        isCoach,\n        aauNumber,\n        agreeToTerms,\n      });\n\n      if (!data.parent) {\n        throw new Error('Parent data not found in response');\n      }\n\n      // Store the parsed address in local storage for future use\n      const parentWithParsedAddress = {\n        ...data.parent,\n        address: parsedAddress, // Store the parsed object locally\n      };\n\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('parentId', data.parent._id);\n      localStorage.setItem('parent', JSON.stringify(parentWithParsedAddress));\n\n      setIsAuthenticated(true);\n      const parentData: Parent = {\n        _id: data.parent._id,\n        email: data.parent.email,\n        fullName: data.parent.fullName,\n        role: data.parent.role || 'Parent',\n        phone: data.parent.phone || '',\n        address: parsedAddress, // Use the parsed address object\n        relationship: data.parent.relationship || '',\n        players: data.parent.players || [],\n        isCoach: data.parent.isCoach || false,\n        aauNumber: data.parent.aauNumber || '',\n        additionalGuardians: data.parent.additionalGuardians || [],\n        createdAt: data.parent.createdAt || new Date().toISOString(),\n        updatedAt: data.parent.updatedAt || new Date().toISOString(),\n      };\n      setParent(parentData);\n\n      navigate(all_routes.adminDashboard);\n    } catch (error) {\n      console.error('Registration Error:', error);\n      throw error; // Re-throw to allow the form to handle the error\n    }\n  };\n\n  const [registrationStatus, setRegistrationStatus] =\n    useState<RegistrationStatus>({\n      parentRegistered: false,\n      parentPaid: false,\n      currentSeason: getCurrentSeason(),\n      hasPlayers: false,\n      hasCurrentSeasonPlayers: false,\n      allPlayersPaid: false,\n    });\n\n  // Helper functions for address handling\n  const parseAddress = (fullAddress: string) => {\n    // First try pattern with unit designator\n    const patternWithUnit =\n      /^(\\d+\\s[\\w\\s\\.]+?)\\s*(?:,?\\s*(apt|apartment|suite|ste|unit|building|bldg|floor|fl|room|rm|department|dept|lot|#)\\.?\\s*([\\w\\s\\-]+?)\\s*)?,\\s*([^,]+?)\\s*,\\s*([a-zA-Z]{2,})\\s*(\\d{5}(?:-\\d{4})?)$/i;\n    const matchWithUnit = fullAddress.match(patternWithUnit);\n\n    if (matchWithUnit) {\n      return {\n        street: matchWithUnit[1].trim(),\n        street2:\n          matchWithUnit[2] && matchWithUnit[3]\n            ? `${matchWithUnit[2].trim()} ${matchWithUnit[3].trim()}`.replace(\n                /\\s+/g,\n                ' '\n              )\n            : '',\n        city: matchWithUnit[4].trim(),\n        state: normalizeState(matchWithUnit[5].trim()),\n        zip: matchWithUnit[6].trim(),\n      };\n    }\n\n    // Fallback pattern for addresses without unit designators\n    const fallbackPattern =\n      /^([^,]+?)\\s*,\\s*([^,]+?)\\s*,\\s*([a-zA-Z]{2,})\\s*(\\d{5}(?:-\\d{4})?)$/i;\n    const fallbackMatch = fullAddress.match(fallbackPattern);\n\n    if (fallbackMatch) {\n      return {\n        street: fallbackMatch[1].trim(),\n        street2: '',\n        city: fallbackMatch[2].trim(),\n        state: normalizeState(fallbackMatch[3].trim()),\n        zip: fallbackMatch[4].trim(),\n      };\n    }\n\n    // If all parsing fails, return the raw address in street\n    return {\n      street: fullAddress,\n      street2: '',\n      city: '',\n      state: '',\n      zip: '',\n    };\n  };\n\n  const normalizeState = (stateInput: string): string => {\n    const stateMap: Record<string, string> = {\n      alabama: 'AL',\n      alaska: 'AK',\n      arizona: 'AZ',\n      arkansas: 'AR',\n      california: 'CA',\n      colorado: 'CO',\n      connecticut: 'CT',\n      delaware: 'DE',\n      florida: 'FL',\n      georgia: 'GA',\n      hawaii: 'HI',\n      idaho: 'ID',\n      illinois: 'IL',\n      indiana: 'IN',\n      iowa: 'IA',\n      kansas: 'KS',\n      kentucky: 'KY',\n      louisiana: 'LA',\n      maine: 'ME',\n      maryland: 'MD',\n      massachusetts: 'MA',\n      michigan: 'MI',\n      minnesota: 'MN',\n      mississippi: 'MS',\n      missouri: 'MO',\n      montana: 'MT',\n      nebraska: 'NE',\n      nevada: 'NV',\n      'new hampshire': 'NH',\n      'new jersey': 'NJ',\n      'new mexico': 'NM',\n      'new york': 'NY',\n      'north carolina': 'NC',\n      'north dakota': 'ND',\n      ohio: 'OH',\n      oklahoma: 'OK',\n      oregon: 'OR',\n      pennsylvania: 'PA',\n      'rhode island': 'RI',\n      'south carolina': 'SC',\n      'south dakota': 'SD',\n      tennessee: 'TN',\n      texas: 'TX',\n      utah: 'UT',\n      vermont: 'VT',\n      virginia: 'VA',\n      washington: 'WA',\n      'west virginia': 'WV',\n      wisconsin: 'WI',\n      wyoming: 'WY',\n    };\n\n    const normalizedInput = stateInput.toLowerCase().trim();\n    return stateMap[normalizedInput] || stateInput.toUpperCase();\n  };\n\n  const validateAddress = (address: {\n    street: string;\n    city: string;\n    state: string;\n    zip: string;\n  }): boolean => {\n    return (\n      !!address.street && !!address.city && !!address.state && !!address.zip\n    );\n  };\n\n  const formatAddressForBackend = (address: {\n    street: string;\n    street2?: string;\n    city: string;\n    state: string;\n    zip: string;\n  }): string => {\n    return `${address.street}${\n      address.street2 ? ', ' + address.street2 : ''\n    }, ${address.city}, ${address.state} ${address.zip}`;\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        parent,\n        user: parent,\n        players,\n        parents,\n        setPlayers,\n        allParents,\n        login,\n        logout,\n        register,\n        fetchParentData,\n        fetchPlayersData,\n        fetchPlayerData,\n        fetchAllPlayers,\n        fetchAllParents,\n        fetchGuardians,\n        checkAuth,\n        role: parent?.role || 'Parent',\n        isLoading,\n        searchAll,\n        fetchParentsData,\n        fetchParentPlayers,\n        fetchAllGuardians,\n        allGuardians,\n        currentUser: parent,\n        refreshAuthData,\n        registrationStatus,\n        setRegistrationStatus,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,WAAW,EACXC,MAAM,QACD,OAAO;AACd,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,UAAU,QAAQ,qCAAqC;AAChE,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,KAAK,MAAM,OAAO;AAUzB,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACvDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAAC;AAChE,MAAMG,WAAW,gBAAGpB,aAAa,CAAyB,IAAI,CAAC;AAE/D,OAAO,MAAMqB,YAAqD,GAAGA,CAAC;EACpEC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM8B,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAW,EAAE,CAAC;EAC1D,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACmC,YAAY,CAAC,GAAGnC,QAAQ,CAAa,EAAE,CAAC;EAC/C,MAAMoC,mBAAmB,GAAGjC,MAAM,CAAC,KAAK,CAAC;EACzC,MAAMkC,iBAAiB,GAAGlC,MAAM,CAAS,CAAC,CAAC;EAC3C,MAAMmC,YAAY,GAAGnC,MAAM,CAAgB,IAAI,CAAC;EAEhD,MAAMoC,SAAS,GAAGrC,WAAW,CAC3B,MAAOsC,IAAY,IAA8B;IAC/C,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,EAAE;MAErB,MAAMG,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAAC,GAAGjC,YAAY,aAAa,EAAE;QAC7DkC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG,CAAC;QAC7CO,MAAM,EAAE;UAAEC,CAAC,EAAET;QAAK;MACpB,CAAC,CAAC;;MAEF;MACA,OAAOI,QAAQ,CAACM,IAAI,CAACC,GAAG,CAAEC,IAAS,KAAM;QACvCC,EAAE,EAAED,IAAI,CAACE,GAAG,IAAIF,IAAI,CAACC,EAAE;QACvBE,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfC,IAAI,EAAEJ,IAAI,CAACK,QAAQ,IAAIL,IAAI,CAACI,IAAI;QAChCE,MAAM,EAAEN,IAAI,CAACM,MAAM;QACnBC,KAAK,EAAEP,IAAI,CAACO,KAAK;QACjBC,GAAG,EAAER,IAAI,CAACQ,GAAG;QACbC,SAAS,EAAET,IAAI,CAACS,SAAS;QACzBC,KAAK,EAAEV,IAAI,CAACU,KAAK;QACjBC,OAAO,EAAEX,IAAI,CAACW,OAAO;QACrBC,KAAK,EAAEZ,IAAI,CAACY,KAAK;QACjBC,KAAK,EAAEb,IAAI,CAACa,KAAK,IAAIb,IAAI,CAACc,YAAY;QACtCC,cAAc,EAAEf,IAAI,CAACgB,UAAU,IAAIhB,IAAI,CAACe,cAAc;QACtDE,SAAS,EAAEjB,IAAI,CAACiB;MAClB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO,EAAE;IACX;EACF,CAAC,EACD,EACF,CAAC;EAED,MAAMC,MAAM,GAAGrE,WAAW,CAAC,MAAM;IAC/Bc,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjCyB,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;IAChCxD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9CyB,YAAY,CAAC8B,UAAU,CAAC,UAAU,CAAC;IACnC9B,YAAY,CAAC8B,UAAU,CAAC,QAAQ,CAAC;IACjCxD,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACpDM,kBAAkB,CAAC,KAAK,CAAC;IACzBP,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3CQ,SAAS,CAAC,IAAI,CAAC;IACfT,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjCa,QAAQ,CAAC,QAAQ,CAAC;IAClBd,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACzC,CAAC,EAAE,CAACa,QAAQ,CAAC,CAAC;EAEd,MAAM2C,gBAAgB,GAAGvE,WAAW,CAClC,OAAOwE,SAAmB,EAAEC,WAAW,GAAG,EAAE,KAAK;IAC/C,IAAI;MACF,MAAMlC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;MAEZ,MAAMmC,OAAO,GAAGvE,SAAS,CAAeoC,KAAK,CAAC;MAC9C,MAAMoC,OAAO,GAAGD,OAAO,CAACE,IAAI,KAAK,OAAO;MAExC,IAAIC,GAAG,GAAG,GAAGnE,YAAY,UAAU;MACnC,IAAIiE,OAAO,IAAIH,SAAS,CAACM,MAAM,KAAK,CAAC,EAAE;QACrCD,GAAG,IAAI,IAAIJ,WAAW,EAAE;MAC1B,CAAC,MAAM;QACLI,GAAG,IAAI,QAAQL,SAAS,CAACO,IAAI,CAAC,GAAG,CAAC,EAAE;QACpC,IAAIN,WAAW,EAAE;UACfI,GAAG,IAAI,IAAIJ,WAAW,EAAE;QAC1B;MACF;MAEA,MAAM/B,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAAWkC,GAAG,EAAE;QAC9CjC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEFd,UAAU,CAACiB,QAAQ,CAACM,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC,EACD,EACF,CAAC;EAED,MAAMY,eAAe,GAAGhF,WAAW,CAAC,MAAOiF,QAAgB,IAAK;IAC9D,IAAI;MACF,MAAM1C,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAI2C,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMxC,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAC9B,GAAGjC,YAAY,WAAWuE,QAAQ,EAAE,EACpC;QACErC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CACF,CAAC;MAED,OAAOG,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO,IAAI;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,eAAe,GAAGnF,WAAW,CAAC,OAAOyE,WAAW,GAAG,EAAE,KAAK;IAC9D,IAAI;MACF3D,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE0D,WAAW,CAAC;MAC7D,MAAMlC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVzB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7B;MACF;MAEA,MAAM8D,GAAG,GAAG,GAAGnE,YAAY,YAAY+D,WAAW,EAAE;MACpD3D,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE8D,GAAG,CAAC;MAEhC,MAAMnC,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAAWkC,GAAG,EAAE;QAC9CjC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEFzB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE2B,QAAQ,CAACM,IAAI,CAAC;MAC3CvB,UAAU,CAACiB,QAAQ,CAACM,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,aAAa,GAAIC,aAA2B,IAAK;IACrD;IACA,MAAMC,WAAW,GAAGhE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEsD,IAAI;IAEhC,MAAMW,UAAkB,GAAG;MACzBnC,GAAG,EAAEiC,aAAa,CAACjC,GAAG,IAAIiC,aAAa,CAACG,QAAQ,IAAI,EAAE;MACtD1B,KAAK,EAAEuB,aAAa,CAACvB,KAAK,IAAI,EAAE;MAChCP,QAAQ,EAAE8B,aAAa,CAAC9B,QAAQ,IAAI,EAAE;MACtCqB,IAAI,EAAEU,WAAW,IAAID,aAAa,CAACT,IAAI,IAAI,QAAQ;MAAE;MACrDhB,KAAK,EAAEyB,aAAa,CAACzB,KAAK,IAAI,EAAE;MAChCC,OAAO,EACL,OAAOwB,aAAa,CAACxB,OAAO,KAAK,QAAQ,GACrC,GAAGwB,aAAa,CAACxB,OAAO,CAAC4B,MAAM,KAAKJ,aAAa,CAACxB,OAAO,CAAC6B,IAAI,KAAKL,aAAa,CAACxB,OAAO,CAAC8B,KAAK,IAAIN,aAAa,CAACxB,OAAO,CAAC+B,GAAG,EAAE,GAC7HP,aAAa,CAACxB,OAAO,IAAI,EAAE;MACjCgC,YAAY,EAAER,aAAa,CAACQ,YAAY,IAAI,EAAE;MAC9CrE,OAAO,EAAEsE,KAAK,CAACC,OAAO,CAACV,aAAa,CAAC7D,OAAO,CAAC,GACzC6D,aAAa,CAAC7D,OAAO,CAACwE,MAAM,CACzBC,CAAM,IAAK,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAAC7C,GACzC,CAAC,GACD,EAAE;MACN8C,OAAO,EAAEb,aAAa,CAACa,OAAO,IAAI,KAAK;MACvCvC,SAAS,EAAE0B,aAAa,CAAC1B,SAAS,IAAI,EAAE;MACxCwC,mBAAmB,EAAEd,aAAa,CAACc,mBAAmB,IAAI;IAC5D,CAAC;IAEDrF,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEwE,UAAU,CAACX,IAAI,CAAC,CAAC,CAAC;IAC5DrD,SAAS,CAACgE,UAAU,CAAC;EACvB,CAAC;EAED,MAAMa,eAAe,GAAGpG,WAAW,CACjC,MAAOwF,QAAgB,IAA6B;IAClD,IAAI;MAAA,IAAAa,oBAAA;MACF,MAAM9D,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVzB,OAAO,CAACsD,KAAK,CAAC,eAAe,CAAC;QAC9B,OAAO,IAAI;MACb;MAEA,MAAMM,OAAO,GAAGvE,SAAS,CAAeoC,KAAK,CAAC;MAC9C,MAAMoC,OAAO,GAAGD,OAAO,CAACE,IAAI,KAAK,OAAO;;MAExC;MACA,IAAID,OAAO,IAAIa,QAAQ,KAAKd,OAAO,CAACvB,EAAE,EAAE;QACtC,OAAO7B,MAAM;MACf;MAEA,MAAMoB,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAC9B,GAAGjC,YAAY,WAAW8E,QAAQ,EAAE,EACpC;QAAE5C,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAAE,CAClD,CAAC;MAED,MAAMgD,UAAU,GAAG7C,QAAQ,CAACM,IAAI;;MAEhC;MACA,MAAMsD,WAAW,GAAG3B,OAAO,GACvB;QAAE,GAAGY,UAAU;QAAEX,IAAI,EAAE;MAAQ,CAAC,GAChCW,UAAU;MAEdH,aAAa,CAACkB,WAAW,CAAC;;MAE1B;MACA,MAAM9B,SAAS,GACb,EAAA6B,oBAAA,GAAAC,WAAW,CAAC9E,OAAO,cAAA6E,oBAAA,uBAAnBA,oBAAA,CAAqBpD,GAAG,CAAEgD,CAAC,IACzB,OAAOA,CAAC,KAAK,QAAQ,GAAGA,CAAC,GAAGA,CAAC,CAAC7C,GAChC,CAAC,KAAI,EAAE;MACT,IAAIoB,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;QACxB,MAAMP,gBAAgB,CAACC,SAAS,CAAC;MACnC;MAEA,OAAO8B,WAAW;IACpB,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,IAAI;IACb;EACF,CAAC,EACD,CAACG,gBAAgB,EAAEjD,MAAM,CAC3B,CAAC;EAED,MAAMiF,cAAc,GAAGvG,WAAW,CAAC,MAAOiF,QAAgB,IAAK;IAC7D,IAAI;MACF,MAAM1C,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAI2C,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMxC,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAC9B,GAAGjC,YAAY,WAAWuE,QAAQ,YAAY,EAC9C;QACErC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CACF,CAAC;MAED,OAAOG,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO,EAAE;IACX;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoC,eAAe,GAAGxG,WAAW,CAAC,OAAOyE,WAAW,GAAG,EAAE,KAAK;IAC9D,IAAI;MACF,MAAMlC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,EAAE;MAErB,MAAMG,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAC9B,GAAGjC,YAAY,YAAY+D,WAAW,EAAE,EACxC;QACE7B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CACF,CAAC;MAEDT,aAAa,CAACY,QAAQ,CAACM,IAAI,CAAC;MAC5BhB,UAAU,CAACU,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;MAC3B,OAAON,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,EAAE;IACX;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqC,gBAAgB,GAAGzG,WAAW,CAAC,MAAOwF,QAAiB,IAAK;IAChE,IAAI;MACF,MAAMjD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE,MAAM,IAAI2C,KAAK,CAAC,+BAA+B,CAAC;MAE5DvD,YAAY,CAAC,IAAI,CAAC;MAElB,IAAIkD,GAAG,GAAG,GAAGnE,YAAY,UAAU;MACnC,IAAI8E,QAAQ,EAAE;QACZX,GAAG,GAAG,GAAGnE,YAAY,WAAW8E,QAAQ,EAAE;QAC1C,MAAM9C,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAASkC,GAAG,EAAE;UAC5CjC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFP,UAAU,CAAC,CAACU,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC7B,CAAC,MAAM;QACL,MAAMN,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAAWkC,GAAG,EAAE;UAC9CjC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFP,UAAU,CAACU,QAAQ,CAACM,IAAI,CAAC;QACzBlB,aAAa,CAACY,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb,CAAC,SAAS;MACRzC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM+E,kBAAkB,GAAG,MAAOlB,QAAgB,IAAwB;IACxE,IAAI;MACF;MACA,IAAI,CAACA,QAAQ,IAAI,CAAC,mBAAmB,CAACmB,IAAI,CAACnB,QAAQ,CAAC,EAAE;QACpD1E,OAAO,CAACsD,KAAK,CAAC,4BAA4B,EAAEoB,QAAQ,CAAC;QACrD,OAAO,EAAE;MACX;MAEA,MAAMjD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVzB,OAAO,CAACsD,KAAK,CAAC,+BAA+B,CAAC;QAC9C,OAAO,EAAE;MACX;;MAEA;MACA,IAAI;QAAA,IAAAwC,eAAA;QACF,MAAMC,SAAS,GAAG,MAAMvG,KAAK,CAACqC,GAAG,CAC/B,GAAGjC,YAAY,WAAW8E,QAAQ,EAAE,EACpC;UACE5C,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CACF,CAAC;;QAED;QACA,IAAI,CAAAqE,eAAA,GAAAC,SAAS,CAAC7D,IAAI,cAAA4D,eAAA,eAAdA,eAAA,CAAgBpF,OAAO,IAAIsE,KAAK,CAACC,OAAO,CAACc,SAAS,CAAC7D,IAAI,CAACxB,OAAO,CAAC,EAAE;UACpE,OAAOqF,SAAS,CAAC7D,IAAI,CAACxB,OAAO;QAC/B;MACF,CAAC,CAAC,OAAOsF,WAAW,EAAE;QACpBhG,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;MACnE;;MAEA;MACA,MAAMgG,UAAU,GAAG,MAAMzG,KAAK,CAACqC,GAAG,CAChC,GAAGjC,YAAY,WAAW8E,QAAQ,UAAU,EAC5C;QACE5C,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CACF,CAAC;;MAED;MACA,OAAOuD,KAAK,CAACC,OAAO,CAACgB,UAAU,CAAC/D,IAAI,CAAC,GACjC+D,UAAU,CAAC/D,IAAI,GACf+D,UAAU,CAAC/D,IAAI,CAACxB,OAAO,IAAI,EAAE;IACnC,CAAC,CAAC,OAAO4C,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,qCAAqCoB,QAAQ,GAAG,EAAEpB,KAAK,CAAC;MACtE,OAAO,EAAE,CAAC,CAAC;IACb;EACF,CAAC;EAED,MAAM4C,iBAAiB,GAAGhH,WAAW,CAAC,OAAOyE,WAAW,GAAG,EAAE,KAAK;IAChE,IAAI;MACF,MAAMlC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,EAAE;MAErB,MAAMG,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAC9B,GAAGjC,YAAY,cAAc+D,WAAW,EAAE,EAC1C;QACE7B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CACF,CAAC;MAED,OAAOG,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO,EAAE;IACX;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM6C,SAAS,GAAGjH,WAAW,CAAC,YAAY;IACxC;IACA,IACEkC,mBAAmB,CAACgF,OAAO,IAC3BC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGjF,iBAAiB,CAAC+E,OAAO,GAAG,IAAI,EAC7C;MACA;IACF;IAEAhF,mBAAmB,CAACgF,OAAO,GAAG,IAAI;IAClC/E,iBAAiB,CAAC+E,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAEtC,MAAM7E,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAM4E,mBAAmB,GAAG7E,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC5D,MAAMmC,IAAI,GAAGpC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,MAAM6E,eAAe,GAAGhG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE8B,GAAG;IAEnC,IAAI;MACF;MACA,IAAI,CAACb,KAAK,EAAE;QACVlB,kBAAkB,CAAC,KAAK,CAAC;QACzBE,SAAS,CAAC,IAAI,CAAC;QACfI,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;MAEA,MAAM+C,OAAO,GAAGvE,SAAS,CAAeoC,KAAK,CAAC;MAC9C,MAAMgF,YAAY,GAAG,EAAE7C,OAAO,CAAC8C,GAAG,IAAI9C,OAAO,CAAC8C,GAAG,GAAG,IAAI,GAAGL,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MAEtE,IAAI,CAACG,YAAY,EAAE;QACjBlD,MAAM,CAAC,CAAC;QACR;MACF;MAEAhD,kBAAkB,CAAC,IAAI,CAAC;;MAExB;MACA,IAAIuD,IAAI,KAAK,OAAO,EAAE;QACpB,IAAI0C,eAAe,KAAK,OAAO,EAAE;QAEjC,MAAMG,SAAiB,GAAG;UACxBrE,GAAG,EAAE,OAAO;UACZU,KAAK,EAAEY,OAAO,CAACZ,KAAK,IAAI,EAAE;UAC1BP,QAAQ,EAAEmB,OAAO,CAACnB,QAAQ,IAAI,eAAe;UAC7CqB,IAAI,EAAE,OAAO;UACbhB,KAAK,EAAE,EAAE;UACTC,OAAO,EAAE,EAAE;UACXgC,YAAY,EAAE,EAAE;UAChBrE,OAAO,EAAE,EAAE;UACX0E,OAAO,EAAE,KAAK;UACdvC,SAAS,EAAE,EAAE;UACbwC,mBAAmB,EAAE;QACvB,CAAC;QAED5E,SAAS,CAACkG,SAAS,CAAC;QACpBrF,YAAY,CAAC8E,OAAO,GAAG,OAAO;MAChC;;MAEA;MAAA,KACK,IAAIG,mBAAmB,EAAE;QAC5B1F,YAAY,CAAC,IAAI,CAAC;QAElB,IAAI;UACF,MAAM4D,UAAU,GAAG,MAAMa,eAAe,CAACiB,mBAAmB,CAAC;UAE7D,IAAI,CAAC9B,UAAU,EAAE;YACf,MAAMmC,cAAsB,GAAG;cAC7BtE,GAAG,EAAEsB,OAAO,CAACvB,EAAE;cACfW,KAAK,EAAEY,OAAO,CAACZ,KAAK,IAAI,EAAE;cAC1BP,QAAQ,EAAEmB,OAAO,CAACnB,QAAQ,IAAI,EAAE;cAChCqB,IAAI,EAAEF,OAAO,CAACE,IAAI,IAAI,QAAQ;cAC9BhB,KAAK,EAAEc,OAAO,CAACd,KAAK,IAAI,EAAE;cAC1BC,OAAO,EACL,OAAOa,OAAO,CAACb,OAAO,KAAK,QAAQ,GAC/Ba,OAAO,CAACb,OAAO,GACfa,OAAO,CAACb,OAAO,GACf,GAAGa,OAAO,CAACb,OAAO,CAAC4B,MAAM,KAAKf,OAAO,CAACb,OAAO,CAAC6B,IAAI,KAAKhB,OAAO,CAACb,OAAO,CAAC8B,KAAK,IAAIjB,OAAO,CAACb,OAAO,CAAC+B,GAAG,EAAE,GACrG,EAAE;cACRC,YAAY,EAAEnB,OAAO,CAACmB,YAAY,IAAI,EAAE;cACxCrE,OAAO,EAAEkD,OAAO,CAAClD,OAAO,IAAI,EAAE;cAC9B0E,OAAO,EAAExB,OAAO,CAACwB,OAAO,IAAI,KAAK;cACjCvC,SAAS,EAAEe,OAAO,CAACf,SAAS,IAAI,EAAE;cAClCwC,mBAAmB,EAAEzB,OAAO,CAACyB,mBAAmB,IAAI;YACtD,CAAC;YAED5E,SAAS,CAACmG,cAAc,CAAC;UAC3B,CAAC,MAAM;YACLnG,SAAS,CAAC;cACR,GAAGgE,UAAU;cACbzB,KAAK,EAAEyB,UAAU,CAACzB,KAAK,IAAIY,OAAO,CAACZ,KAAK,IAAI,EAAE;cAC9CP,QAAQ,EAAEgC,UAAU,CAAChC,QAAQ,IAAImB,OAAO,CAACnB,QAAQ,IAAI;YACvD,CAAC,CAAC;UACJ;UAEAnB,YAAY,CAAC8E,OAAO,GAAGG,mBAAmB;QAC5C,CAAC,CAAC,OAAOjD,KAAK,EAAE;UACdtD,OAAO,CAACsD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UAEpD,MAAMsD,cAAsB,GAAG;YAC7BtE,GAAG,EAAEsB,OAAO,CAACvB,EAAE;YACfW,KAAK,EAAEY,OAAO,CAACZ,KAAK,IAAI,EAAE;YAC1BP,QAAQ,EAAEmB,OAAO,CAACnB,QAAQ,IAAI,EAAE;YAChCqB,IAAI,EAAEF,OAAO,CAACE,IAAI,IAAI,QAAQ;YAC9BhB,KAAK,EAAEc,OAAO,CAACd,KAAK,IAAI,EAAE;YAC1BC,OAAO,EACL,OAAOa,OAAO,CAACb,OAAO,KAAK,QAAQ,GAC/Ba,OAAO,CAACb,OAAO,GACfa,OAAO,CAACb,OAAO,GACf,GAAGa,OAAO,CAACb,OAAO,CAAC4B,MAAM,KAAKf,OAAO,CAACb,OAAO,CAAC6B,IAAI,KAAKhB,OAAO,CAACb,OAAO,CAAC8B,KAAK,IAAIjB,OAAO,CAACb,OAAO,CAAC+B,GAAG,EAAE,GACrG,EAAE;YACRC,YAAY,EAAEnB,OAAO,CAACmB,YAAY,IAAI,EAAE;YACxCrE,OAAO,EAAEkD,OAAO,CAAClD,OAAO,IAAI,EAAE;YAC9B0E,OAAO,EAAExB,OAAO,CAACwB,OAAO,IAAI,KAAK;YACjCvC,SAAS,EAAEe,OAAO,CAACf,SAAS,IAAI,EAAE;YAClCwC,mBAAmB,EAAEzB,OAAO,CAACyB,mBAAmB,IAAI;UACtD,CAAC;UAED5E,SAAS,CAACmG,cAAc,CAAC;QAC3B,CAAC,SAAS;UACR/F,YAAY,CAAC,KAAK,CAAC;QACrB;MACF;IACF,CAAC,CAAC,OAAOyC,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCC,MAAM,CAAC,CAAC;IACV,CAAC,SAAS;MACRnC,mBAAmB,CAACgF,OAAO,GAAG,KAAK;IACrC;EACF,CAAC,EAAE,CAAC7C,MAAM,EAAE+B,eAAe,EAAE9E,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE8B,GAAG,CAAC,CAAC;EAE1C,MAAMuE,eAAe,GAAG3H,WAAW,CAAC,YAAY;IAC9C2B,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACFS,YAAY,CAAC8E,OAAO,GAAG,IAAI,CAAC,CAAC;MAC7B,MAAMD,SAAS,CAAC,CAAC;IACnB,CAAC,SAAS;MACRtF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACsF,SAAS,CAAC,CAAC;EAEflH,SAAS,CAAC,MAAM;IACd,MAAM6H,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMX,SAAS,CAAC,CAAC;IACnB,CAAC;IACDW,cAAc,CAAC,CAAC;IAEhB,MAAMC,eAAe,GAAGC,WAAW,CAACb,SAAS,EAAE,MAAM,CAAC;IACtD,OAAO,MAAMc,aAAa,CAACF,eAAe,CAAC;EAC7C,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEf,MAAMe,KAAK,GAAG,MAAAA,CAAOlE,KAAa,EAAEmE,QAAgB,KAAK;IACvD,IAAI;MACF,MAAMC,OAAO,GAAG;QACdpE,KAAK,EAAEA,KAAK;QACZmE,QAAQ,EAAEA;MACZ,CAAC;MACDnH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEmH,OAAO,CAAC;MAEtC,MAAMxF,QAAQ,GAAG,MAAMpC,KAAK,CAAC6H,IAAI,CAAC,GAAGzH,YAAY,QAAQ,EAAEwH,OAAO,CAAC;MACnEpH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE2B,QAAQ,CAACM,IAAI,CAAC;MAE7C,MAAM;QAAET,KAAK;QAAEjB;MAAO,CAAC,GAAGoB,QAAQ,CAACM,IAAI;;MAEvC;MACA,IAAI,EAAC1B,MAAM,aAANA,MAAM,eAANA,MAAM,CAAE8B,GAAG,GAAE;QAChB,MAAM,IAAI8B,KAAK,CAAC,0CAA0C,CAAC;MAC7D;MAEA1C,YAAY,CAAC4F,OAAO,CAAC,OAAO,EAAE7F,KAAK,CAAC;MACpCC,YAAY,CAAC4F,OAAO,CAAC,UAAU,EAAE9G,MAAM,CAAC8B,GAAG,CAAC;MAC5CZ,YAAY,CAAC4F,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAChH,MAAM,CAAC,CAAC;MAEtDD,kBAAkB,CAAC,IAAI,CAAC;MACxB,MAAMkE,UAAkB,GAAG;QACzBnC,GAAG,EAAE9B,MAAM,CAAC8B,GAAG;QACfU,KAAK,EAAExC,MAAM,CAACwC,KAAK;QACnBP,QAAQ,EAAEjC,MAAM,CAACiC,QAAQ;QACzBqB,IAAI,EAAEtD,MAAM,CAACsD,IAAI,IAAI,QAAQ;QAC7BhB,KAAK,EAAEtC,MAAM,CAACsC,KAAK,IAAI,EAAE;QACzBC,OAAO,EAAEvC,MAAM,CAACuC,OAAO,IAAI,EAAE;QAC7BgC,YAAY,EAAEvE,MAAM,CAACuE,YAAY,IAAI,EAAE;QACvCrE,OAAO,EAAEF,MAAM,CAACE,OAAO,IAAI,EAAE;QAC7B0E,OAAO,EAAE5E,MAAM,CAAC4E,OAAO,IAAI,KAAK;QAChCvC,SAAS,EAAErC,MAAM,CAACqC,SAAS,IAAI,EAAE;QACjCwC,mBAAmB,EAAE7E,MAAM,CAAC6E,mBAAmB,IAAI,EAAE;QACrDhC,SAAS,EAAE7C,MAAM,CAAC6C,SAAS,IAAI,IAAIgD,IAAI,CAAC,CAAC,CAACoB,WAAW,CAAC,CAAC;QACvDC,SAAS,EAAElH,MAAM,CAACkH,SAAS,IAAI,IAAIrB,IAAI,CAAC,CAAC,CAACoB,WAAW,CAAC;MACxD,CAAC;MACDhH,SAAS,CAACgE,UAAU,CAAC;MAErB3D,QAAQ,CAACxB,UAAU,CAACqI,cAAc,CAAC;IACrC,CAAC,CAAC,OAAOrE,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,IAAI9D,KAAK,CAACoI,YAAY,CAACtE,KAAK,CAAC,EAAE;QAAA,IAAAuE,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;QAC7B/H,OAAO,CAACsD,KAAK,CAAC,sBAAsB,GAAAuE,eAAA,GAAEvE,KAAK,CAAC1B,QAAQ,cAAAiG,eAAA,uBAAdA,eAAA,CAAgB3F,IAAI,CAAC;QAC3D8F,KAAK,CAAC,EAAAF,gBAAA,GAAAxE,KAAK,CAAC1B,QAAQ,cAAAkG,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB5F,IAAI,cAAA6F,qBAAA,uBAApBA,qBAAA,CAAsBzE,KAAK,KAAI,iCAAiC,CAAC;MACzE,CAAC,MAAM;QACL0E,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CACfjF,KAAa,EACbmE,QAAgB,EAChB1E,QAAgB,EAChBK,KAAa,EACbC,OAAe,EACfgC,YAAoB,EACpBK,OAAgB,EAChBvC,SAAiB,EACjBqF,YAAqB,KAClB;IACH,IAAI;MACF;MACA,MAAMC,aAAa,GAAGC,YAAY,CAACrF,OAAO,CAAC;;MAE3C;MACA,IAAI,CAACsF,eAAe,CAACF,aAAa,CAAC,EAAE;QACnC,MAAM,IAAI/D,KAAK,CACb,2DACF,CAAC;MACH;;MAEA;MACA,MAAMkE,gBAAgB,GAAGC,uBAAuB,CAACJ,aAAa,CAAC;;MAE/D;MACA,MAAMK,eAAe,GAAGxF,KAAK,CAACyF,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAClD,MAAMC,eAAe,GAAGxB,QAAQ,CAACuB,IAAI,CAAC,CAAC;MAEvC,MAAMxG,IAAI,GAAG,MAAM3C,YAAY,CAAC;QAC9ByD,KAAK,EAAEwF,eAAe;QAAE;QACxBrB,QAAQ,EAAEwB,eAAe;QAAE;QAC3BlG,QAAQ;QACRK,KAAK;QACLC,OAAO,EAAEuF,gBAAgB;QAAE;QAC3BvD,YAAY;QACZK,OAAO;QACPvC,SAAS;QACTqF;MACF,CAAC,CAAC;MAEF,IAAI,CAAChG,IAAI,CAAC1B,MAAM,EAAE;QAChB,MAAM,IAAI4D,KAAK,CAAC,mCAAmC,CAAC;MACtD;;MAEA;MACA,MAAMwE,uBAAuB,GAAG;QAC9B,GAAG1G,IAAI,CAAC1B,MAAM;QACduC,OAAO,EAAEoF,aAAa,CAAE;MAC1B,CAAC;MAEDzG,YAAY,CAAC4F,OAAO,CAAC,OAAO,EAAEpF,IAAI,CAACT,KAAK,CAAC;MACzCC,YAAY,CAAC4F,OAAO,CAAC,UAAU,EAAEpF,IAAI,CAAC1B,MAAM,CAAC8B,GAAG,CAAC;MACjDZ,YAAY,CAAC4F,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACoB,uBAAuB,CAAC,CAAC;MAEvErI,kBAAkB,CAAC,IAAI,CAAC;MACxB,MAAMkE,UAAkB,GAAG;QACzBnC,GAAG,EAAEJ,IAAI,CAAC1B,MAAM,CAAC8B,GAAG;QACpBU,KAAK,EAAEd,IAAI,CAAC1B,MAAM,CAACwC,KAAK;QACxBP,QAAQ,EAAEP,IAAI,CAAC1B,MAAM,CAACiC,QAAQ;QAC9BqB,IAAI,EAAE5B,IAAI,CAAC1B,MAAM,CAACsD,IAAI,IAAI,QAAQ;QAClChB,KAAK,EAAEZ,IAAI,CAAC1B,MAAM,CAACsC,KAAK,IAAI,EAAE;QAC9BC,OAAO,EAAEoF,aAAa;QAAE;QACxBpD,YAAY,EAAE7C,IAAI,CAAC1B,MAAM,CAACuE,YAAY,IAAI,EAAE;QAC5CrE,OAAO,EAAEwB,IAAI,CAAC1B,MAAM,CAACE,OAAO,IAAI,EAAE;QAClC0E,OAAO,EAAElD,IAAI,CAAC1B,MAAM,CAAC4E,OAAO,IAAI,KAAK;QACrCvC,SAAS,EAAEX,IAAI,CAAC1B,MAAM,CAACqC,SAAS,IAAI,EAAE;QACtCwC,mBAAmB,EAAEnD,IAAI,CAAC1B,MAAM,CAAC6E,mBAAmB,IAAI,EAAE;QAC1DhC,SAAS,EAAEnB,IAAI,CAAC1B,MAAM,CAAC6C,SAAS,IAAI,IAAIgD,IAAI,CAAC,CAAC,CAACoB,WAAW,CAAC,CAAC;QAC5DC,SAAS,EAAExF,IAAI,CAAC1B,MAAM,CAACkH,SAAS,IAAI,IAAIrB,IAAI,CAAC,CAAC,CAACoB,WAAW,CAAC;MAC7D,CAAC;MACDhH,SAAS,CAACgE,UAAU,CAAC;MAErB3D,QAAQ,CAACxB,UAAU,CAACqI,cAAc,CAAC;IACrC,CAAC,CAAC,OAAOrE,KAAK,EAAE;MACdtD,OAAO,CAACsD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAM,CAACuF,kBAAkB,EAAEC,qBAAqB,CAAC,GAC/C9J,QAAQ,CAAqB;IAC3B+J,gBAAgB,EAAE,KAAK;IACvBC,UAAU,EAAE,KAAK;IACjBC,aAAa,EAAExJ,gBAAgB,CAAC,CAAC;IACjCyJ,UAAU,EAAE,KAAK;IACjBC,uBAAuB,EAAE,KAAK;IAC9BC,cAAc,EAAE;EAClB,CAAC,CAAC;;EAEJ;EACA,MAAMhB,YAAY,GAAIiB,WAAmB,IAAK;IAC5C;IACA,MAAMC,eAAe,GACnB,iMAAiM;IACnM,MAAMC,aAAa,GAAGF,WAAW,CAACG,KAAK,CAACF,eAAe,CAAC;IAExD,IAAIC,aAAa,EAAE;MACjB,OAAO;QACL5E,MAAM,EAAE4E,aAAa,CAAC,CAAC,CAAC,CAACb,IAAI,CAAC,CAAC;QAC/Be,OAAO,EACLF,aAAa,CAAC,CAAC,CAAC,IAAIA,aAAa,CAAC,CAAC,CAAC,GAChC,GAAGA,aAAa,CAAC,CAAC,CAAC,CAACb,IAAI,CAAC,CAAC,IAAIa,aAAa,CAAC,CAAC,CAAC,CAACb,IAAI,CAAC,CAAC,EAAE,CAACgB,OAAO,CAC7D,MAAM,EACN,GACF,CAAC,GACD,EAAE;QACR9E,IAAI,EAAE2E,aAAa,CAAC,CAAC,CAAC,CAACb,IAAI,CAAC,CAAC;QAC7B7D,KAAK,EAAE8E,cAAc,CAACJ,aAAa,CAAC,CAAC,CAAC,CAACb,IAAI,CAAC,CAAC,CAAC;QAC9C5D,GAAG,EAAEyE,aAAa,CAAC,CAAC,CAAC,CAACb,IAAI,CAAC;MAC7B,CAAC;IACH;;IAEA;IACA,MAAMkB,eAAe,GACnB,sEAAsE;IACxE,MAAMC,aAAa,GAAGR,WAAW,CAACG,KAAK,CAACI,eAAe,CAAC;IAExD,IAAIC,aAAa,EAAE;MACjB,OAAO;QACLlF,MAAM,EAAEkF,aAAa,CAAC,CAAC,CAAC,CAACnB,IAAI,CAAC,CAAC;QAC/Be,OAAO,EAAE,EAAE;QACX7E,IAAI,EAAEiF,aAAa,CAAC,CAAC,CAAC,CAACnB,IAAI,CAAC,CAAC;QAC7B7D,KAAK,EAAE8E,cAAc,CAACE,aAAa,CAAC,CAAC,CAAC,CAACnB,IAAI,CAAC,CAAC,CAAC;QAC9C5D,GAAG,EAAE+E,aAAa,CAAC,CAAC,CAAC,CAACnB,IAAI,CAAC;MAC7B,CAAC;IACH;;IAEA;IACA,OAAO;MACL/D,MAAM,EAAE0E,WAAW;MACnBI,OAAO,EAAE,EAAE;MACX7E,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EAED,MAAM6E,cAAc,GAAIG,UAAkB,IAAa;IACrD,MAAMC,QAAgC,GAAG;MACvCC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE,IAAI;MACnBC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZ,eAAe,EAAE,IAAI;MACrB,YAAY,EAAE,IAAI;MAClB,YAAY,EAAE,IAAI;MAClB,UAAU,EAAE,IAAI;MAChB,gBAAgB,EAAE,IAAI;MACtB,cAAc,EAAE,IAAI;MACpBC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,YAAY,EAAE,IAAI;MAClB,cAAc,EAAE,IAAI;MACpB,gBAAgB,EAAE,IAAI;MACtB,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,IAAI;MAChB,eAAe,EAAE,IAAI;MACrBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC;IAED,MAAMC,eAAe,GAAG1C,UAAU,CAACrB,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IACvD,OAAOqB,QAAQ,CAACyC,eAAe,CAAC,IAAI1C,UAAU,CAAC2C,WAAW,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMpE,eAAe,GAAItF,OAKxB,IAAc;IACb,OACE,CAAC,CAACA,OAAO,CAAC4B,MAAM,IAAI,CAAC,CAAC5B,OAAO,CAAC6B,IAAI,IAAI,CAAC,CAAC7B,OAAO,CAAC8B,KAAK,IAAI,CAAC,CAAC9B,OAAO,CAAC+B,GAAG;EAE1E,CAAC;EAED,MAAMyD,uBAAuB,GAAIxF,OAMhC,IAAa;IACZ,OAAO,GAAGA,OAAO,CAAC4B,MAAM,GACtB5B,OAAO,CAAC0G,OAAO,GAAG,IAAI,GAAG1G,OAAO,CAAC0G,OAAO,GAAG,EAAE,KAC1C1G,OAAO,CAAC6B,IAAI,KAAK7B,OAAO,CAAC8B,KAAK,IAAI9B,OAAO,CAAC+B,GAAG,EAAE;EACtD,CAAC;EAED,oBACEnF,OAAA,CAACO,WAAW,CAACwM,QAAQ;IACnBC,KAAK,EAAE;MACLrM,eAAe;MACfE,MAAM;MACNoM,IAAI,EAAEpM,MAAM;MACZE,OAAO;MACPO,OAAO;MACPN,UAAU;MACVI,UAAU;MACVmG,KAAK;MACL3D,MAAM;MACN0E,QAAQ;MACR3C,eAAe;MACf7B,gBAAgB;MAChBS,eAAe;MACfG,eAAe;MACfqB,eAAe;MACfD,cAAc;MACdU,SAAS;MACTrC,IAAI,EAAE,CAAAtD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEsD,IAAI,KAAI,QAAQ;MAC9BlD,SAAS;MACTW,SAAS;MACToE,gBAAgB;MAChBC,kBAAkB;MAClBM,iBAAiB;MACjB/E,YAAY;MACZ0L,WAAW,EAAErM,MAAM;MACnBqG,eAAe;MACfgC,kBAAkB;MAClBC;IACF,CAAE;IAAA1I,QAAA,EAEDA;EAAQ;IAAA0M,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5M,EAAA,CA/yBWF,YAAqD;EAAA,QAO/Cf,WAAW;AAAA;AAAA8N,EAAA,GAPjB/M,YAAqD;AAizBlE,OAAO,MAAMgN,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtO,UAAU,CAACmB,WAAW,CAAC;EACvC,IAAI,CAACmN,OAAO,EAAE;IACZ,MAAM,IAAIjJ,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOiJ,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}