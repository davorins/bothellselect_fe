{"ast":null,"code":"var _jsxFileName = \"/Users/davorins/Desktop/bs/src/core/common/header/FullscreenToggle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullscreenToggle = () => {\n  _s();\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const toggleFullscreen = useCallback(() => {\n    if (!isFullscreen) {\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen().catch(err => {});\n        setIsFullscreen(true);\n      }\n    } else {\n      if (document.exitFullscreen) {\n        if (document.fullscreenElement) {\n          document.exitFullscreen().catch(err => {});\n        }\n        setIsFullscreen(false);\n      }\n    }\n  }, [isFullscreen]);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    onClick: toggleFullscreen,\n    to: \"#\",\n    className: \"btn btn-outline-light bg-white btn-icon me-1\",\n    id: \"btnFullscreen\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"ti ti-maximize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(FullscreenToggle, \"Fq0ZmOKkMaCUCRLcVgM/JKln660=\");\n_c = FullscreenToggle;\nexport default FullscreenToggle;\nvar _c;\n$RefreshReg$(_c, \"FullscreenToggle\");","map":{"version":3,"names":["React","useCallback","useState","Link","jsxDEV","_jsxDEV","FullscreenToggle","_s","isFullscreen","setIsFullscreen","toggleFullscreen","document","documentElement","requestFullscreen","catch","err","exitFullscreen","fullscreenElement","onClick","to","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davorins/Desktop/bs/src/core/common/header/FullscreenToggle.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FullscreenToggle = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  const toggleFullscreen = useCallback(() => {\n    if (!isFullscreen) {\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen().catch((err) => {});\n        setIsFullscreen(true);\n      }\n    } else {\n      if (document.exitFullscreen) {\n        if (document.fullscreenElement) {\n          document.exitFullscreen().catch((err) => {});\n        }\n        setIsFullscreen(false);\n      }\n    }\n  }, [isFullscreen]);\n\n  return (\n    <Link\n      onClick={toggleFullscreen}\n      to='#'\n      className='btn btn-outline-light bg-white btn-icon me-1'\n      id='btnFullscreen'\n    >\n      <i className='ti ti-maximize' />\n    </Link>\n  );\n};\n\nexport default FullscreenToggle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMQ,gBAAgB,GAAGT,WAAW,CAAC,MAAM;IACzC,IAAI,CAACO,YAAY,EAAE;MACjB,IAAIG,QAAQ,CAACC,eAAe,CAACC,iBAAiB,EAAE;QAC9CF,QAAQ,CAACC,eAAe,CAACC,iBAAiB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK,CAAC,CAAC,CAAC;QAC/DN,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC,MAAM;MACL,IAAIE,QAAQ,CAACK,cAAc,EAAE;QAC3B,IAAIL,QAAQ,CAACM,iBAAiB,EAAE;UAC9BN,QAAQ,CAACK,cAAc,CAAC,CAAC,CAACF,KAAK,CAAEC,GAAG,IAAK,CAAC,CAAC,CAAC;QAC9C;QACAN,eAAe,CAAC,KAAK,CAAC;MACxB;IACF;EACF,CAAC,EAAE,CAACD,YAAY,CAAC,CAAC;EAElB,oBACEH,OAAA,CAACF,IAAI;IACHe,OAAO,EAAER,gBAAiB;IAC1BS,EAAE,EAAC,GAAG;IACNC,SAAS,EAAC,8CAA8C;IACxDC,EAAE,EAAC,eAAe;IAAAC,QAAA,eAElBjB,OAAA;MAAGe,SAAS,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEX,CAAC;AAACnB,EAAA,CA7BID,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AA+BtB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}