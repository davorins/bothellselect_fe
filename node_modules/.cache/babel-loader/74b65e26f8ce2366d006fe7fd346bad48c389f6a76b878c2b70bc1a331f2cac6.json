{"ast":null,"code":"import * as t from \"react\";\nconst i = e => e && \"current\" in e ? e.current : e,\n  d = !(typeof window < \"u\" && window.document?.createElement);\nfunction f({\n  type: e,\n  listener: s,\n  element: c = d ? void 0 : window,\n  options: u\n}) {\n  const o = t.useRef();\n  t.useEffect(() => {\n    o.current = s;\n  }, [s]);\n  const r = t.useCallback(n => {\n    o.current?.(n);\n  }, []);\n  t.useEffect(() => {\n    const n = i(c);\n    return n?.addEventListener(e, r, u), () => n?.removeEventListener(e, r);\n  }, [e, c, u, r]);\n}\nexport { i as getRefElement, f as useEventListener };","map":{"version":3,"names":["i","e","current","d","window","document","createElement","f","type","listener","s","element","c","options","u","o","t","useRef","useEffect","r","useCallback","n","addEventListener","removeEventListener"],"sources":["/Users/davorins/Desktop/bs/node_modules/react-square-web-payments-sdk/src/hooks/use-event-listener.ts"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\n\nexport const getRefElement = <T>(\n  element?: React.RefObject<Element> | T\n): Element | T | undefined | null | React.RefObject<Element> => {\n  if (element && 'current' in element) {\n    return element.current;\n  }\n\n  return element;\n};\n\nconst isSsr = !(typeof window !== 'undefined' && window.document?.createElement);\n\ntype UseEventListenerProps = {\n  type: keyof WindowEventMap;\n  listener: EventListener;\n  element?: React.RefObject<Element> | HTMLElement | Document | Window | null;\n  options?: AddEventListenerOptions;\n};\n\nfunction useEventListener({ type, listener, element = isSsr ? undefined : window, options }: UseEventListenerProps) {\n  const savedListener = React.useRef<EventListener>();\n\n  React.useEffect(() => {\n    savedListener.current = listener;\n  }, [listener]);\n\n  const handleEventListener = React.useCallback((event: Event) => {\n    savedListener.current?.(event);\n  }, []);\n\n  React.useEffect(() => {\n    const target = getRefElement(element) as unknown as Element;\n\n    target?.addEventListener(type, handleEventListener, options);\n\n    return () => target?.removeEventListener(type, handleEventListener);\n  }, [type, element, options, handleEventListener]);\n}\n\nexport { useEventListener };\nexport type { UseEventListenerProps };\n"],"mappings":";AAGa,MAAAA,CAAA,GACXC,CAAA,IAEIA,CAAA,IAAW,aAAaA,CAAA,GACnBA,CAAA,CAAQC,OAAA,GAGVD,CAAA;EAGHE,CAAA,GAAQ,EAAE,OAAOC,MAAA,GAAW,OAAeA,MAAA,CAAOC,QAAA,EAAUC,aAAA;AASlE,SAASC,EAAiB;EAAEC,IAAA,EAAAP,CAAA;EAAMQ,QAAA,EAAAC,CAAA;EAAUC,OAAA,EAAAC,CAAA,GAAUT,CAAA,GAAQ,SAAYC,MAAA;EAAQS,OAAA,EAAAC;AAAA,GAAkC;EAC5G,MAAAC,CAAA,GAAgBC,CAAA,CAAMC,MAAA;EAE5BD,CAAA,CAAME,SAAA,CAAU,MAAM;IACpBH,CAAA,CAAcb,OAAA,GAAUQ,CAAA;EAAA,GACvB,CAACA,CAAQ,CAAC;EAEb,MAAMS,CAAA,GAAsBH,CAAA,CAAMI,WAAA,CAAaC,CAAA,IAAiB;IAC9DN,CAAA,CAAcb,OAAA,GAAUmB,CAAK;EAC/B,GAAG,EAAE;EAELL,CAAA,CAAME,SAAA,CAAU,MAAM;IACd,MAAAG,CAAA,GAASrB,CAAA,CAAcY,CAAO;IAE5B,OAAAS,CAAA,EAAAC,gBAAA,CAAiBrB,CAAA,EAAMkB,CAAA,EAAqBL,CAAO,GAEpD,MAAMO,CAAA,EAAQE,mBAAA,CAAoBtB,CAAA,EAAMkB,CAAmB;EAAA,GACjE,CAAClB,CAAA,EAAMW,CAAA,EAASE,CAAA,EAASK,CAAmB,CAAC;AAClD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}