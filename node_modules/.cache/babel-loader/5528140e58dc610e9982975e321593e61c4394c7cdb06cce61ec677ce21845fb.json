{"ast":null,"code":"import * as r from \"react\";\nimport { payments as k } from \"../../node_modules/@square/web-sdk/dist/index.es.mjs\";\nimport w from \"../../components/error-screen/error-screen.es.mjs\";\nimport { useDynamicCallback as b } from \"../../hooks/use-dynamic-callback.es.mjs\";\nconst i = r.createContext({\n  cardTokenizeResponseReceived: null,\n  createPaymentRequest: null,\n  payments: null\n});\nfunction T({\n  applicationId: e,\n  locationId: o,\n  children: u,\n  overrides: l,\n  ...n\n}) {\n  const [a, m] = r.useState(),\n    [f] = r.useState(() => n.createPaymentRequest?.());\n  r.useEffect(() => {\n    const t = new AbortController(),\n      {\n        signal: s\n      } = t;\n    async function y(v) {\n      await k(e, o, l).then(c => {\n        if (c === null) throw new Error(\"Square Web Payments SDK failed to load\");\n        if (!v?.aborted) return m(c), c;\n      });\n    }\n    return e && o && y(s), () => {\n      t.abort();\n    };\n  }, [e, o]);\n  const R = b(async t => {\n    if (t.errors || !n.createVerificationDetails) {\n      await n.cardTokenizeResponseReceived(t);\n      return;\n    }\n    const s = await a?.verifyBuyer(String(t.token), n.createVerificationDetails());\n    await n.cardTokenizeResponseReceived(t, s);\n  });\n  if (!e || !o) return /* @__PURE__ */r.createElement(w, null);\n  if (!a) return null;\n  const d = {\n    cardTokenizeResponseReceived: R,\n    createPaymentRequest: f,\n    payments: a\n  };\n  return /* @__PURE__ */r.createElement(i.Provider, {\n    value: d\n  }, u);\n}\nconst x = () => {\n  const e = r.useContext(i);\n  if (e === void 0) throw new Error(\"useForm must be used within a FormProvider\");\n  return e;\n};\nexport { i as FormContext, T as default, x as useForm };","map":{"version":3,"names":["i","r","createContext","cardTokenizeResponseReceived","createPaymentRequest","payments","T","applicationId","e","locationId","o","children","u","overrides","l","n","a","m","useState","f","useEffect","t","AbortController","signal","s","y","v","k","then","c","Error","aborted","abort","R","b","errors","createVerificationDetails","verifyBuyer","String","token","createElement","w","d","Provider","value","x","useForm","useContext"],"sources":["/Users/davorins/Desktop/bs/node_modules/react-square-web-payments-sdk/src/contexts/form/form.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport { payments } from '@square/web-sdk';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { ErrorScreen } from '~/components/error-screen';\nimport { useDynamicCallback } from '~/hooks/use-dynamic-callback';\nimport type { FormContextType, FormProviderProps } from './form.types';\n\n/**\n * Internal helper that the `PaymentForm` uses to manage internal state and\n * expose access to the Web Payment SDK library.\n */\nconst FormContext = React.createContext<FormContextType>({\n  cardTokenizeResponseReceived: null as unknown as () => Promise<void>,\n  createPaymentRequest: null as unknown as Square.PaymentRequestOptions,\n  payments: null as unknown as Square.Payments,\n});\n\nfunction FormProvider({ applicationId, locationId, children, overrides, ...props }: FormProviderProps) {\n  const [instance, setInstance] = React.useState<Square.Payments>();\n  const [createPaymentRequest] = React.useState<undefined | Square.PaymentRequestOptions>(() =>\n    props.createPaymentRequest?.()\n  );\n\n  React.useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    async function loadPayment(signal?: AbortSignal): Promise<void> {\n      await payments(applicationId, locationId, overrides).then((res) => {\n        if (res === null) {\n          throw new Error('Square Web Payments SDK failed to load');\n        }\n\n        if (signal?.aborted) {\n          return;\n        }\n\n        setInstance(res);\n\n        return res;\n      });\n    }\n\n    if (applicationId && locationId) {\n      loadPayment(signal);\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [applicationId, locationId]);\n\n  const cardTokenizeResponseReceived = async (rest: Square.TokenResult): Promise<void> => {\n    if (rest.errors || !props.createVerificationDetails) {\n      await props.cardTokenizeResponseReceived(rest);\n      return;\n    }\n\n    const verifyBuyerResults = await instance?.verifyBuyer(String(rest.token), props.createVerificationDetails());\n\n    await props.cardTokenizeResponseReceived(rest, verifyBuyerResults);\n  };\n\n  // Fixes stale closure issue with using React Hooks & SqPaymentForm callback functions\n  // https://github.com/facebook/react/issues/16956\n  const cardTokenizeResponseReceivedCallback = useDynamicCallback(cardTokenizeResponseReceived);\n\n  if (!applicationId || !locationId) {\n    return <ErrorScreen />;\n  }\n\n  if (!instance) return null;\n\n  const context: FormContextType = {\n    cardTokenizeResponseReceived: cardTokenizeResponseReceivedCallback,\n    createPaymentRequest,\n    payments: instance,\n  };\n\n  return <FormContext.Provider value={context}>{children}</FormContext.Provider>;\n}\n\nconst useForm = (): FormContextType => {\n  const context = React.useContext(FormContext);\n\n  if (context === undefined) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n\n  return context;\n};\n\nexport { FormContext, useForm };\nexport default FormProvider;\n"],"mappings":";;;;AAcM,MAAAA,CAAA,GAAcC,CAAA,CAAMC,aAAA,CAA+B;EACvDC,4BAAA,EAA8B;EAC9BC,oBAAA,EAAsB;EACtBC,QAAA,EAAU;AACZ,CAAC;AAED,SAASC,EAAa;EAAEC,aAAA,EAAAC,CAAA;EAAeC,UAAA,EAAAC,CAAA;EAAYC,QAAA,EAAAC,CAAA;EAAUC,SAAA,EAAAC,CAAA;EAAA,GAAcC;AAAA,GAA4B;EACrG,MAAM,CAACC,CAAA,EAAUC,CAAW,IAAIhB,CAAA,CAAMiB,QAAA,CAA0B;IAC1D,CAACC,CAAoB,IAAIlB,CAAA,CAAMiB,QAAA,CAAmD,MACtFH,CAAA,CAAMX,oBAAA,GAAuB;EAG/BH,CAAA,CAAMmB,SAAA,CAAU,MAAM;IACd,MAAAC,CAAA,GAAkB,IAAIC,eAAA;MACtB;QAAEC,MAAA,EAAAC;MAAW,IAAAH,CAAA;IAEnB,eAAeI,EAAYC,CAAA,EAAqC;MAC9D,MAAMC,CAAA,CAASnB,CAAA,EAAeE,CAAA,EAAYI,CAAS,EAAEc,IAAA,CAAMC,CAAA,IAAQ;QACjE,IAAIA,CAAA,KAAQ,MACJ,UAAIC,KAAA,CAAM,wCAAwC;QAG1D,IAAI,CAAAJ,CAAA,EAAQK,OAAA,EAIZ,OAAAd,CAAA,CAAYY,CAAG,GAERA,CAAA;MAAA,CACR;IACH;IAEA,OAAIrB,CAAA,IAAiBE,CAAA,IACnBe,CAAA,CAAYD,CAAM,GAGb,MAAM;MACXH,CAAA,CAAgBW,KAAA,CAAM;IAAA;EACxB,GACC,CAACxB,CAAA,EAAeE,CAAU,CAAC;EAexB,MAAAuB,CAAA,GAAuCC,CAAA,CAbR,MAAOb,CAAA,IAA4C;IACtF,IAAIA,CAAA,CAAKc,MAAA,IAAU,CAACpB,CAAA,CAAMqB,yBAAA,EAA2B;MAC7C,MAAArB,CAAA,CAAMZ,4BAAA,CAA6BkB,CAAI;MAC7C;IACF;IAEM,MAAAG,CAAA,GAAqB,MAAMR,CAAA,EAAUqB,WAAA,CAAYC,MAAA,CAAOjB,CAAA,CAAKkB,KAAK,GAAGxB,CAAA,CAAMqB,yBAAA,EAA2B;IAEtG,MAAArB,CAAA,CAAMZ,4BAAA,CAA6BkB,CAAA,EAAMG,CAAkB;EAAA,CAKyB;EAExF,KAAChB,CAAA,IAAiB,CAACE,CAAA,EACrB,sBAAAT,CAAA,CAAAuC,aAAA,CAAQC,CAAA,EAAY;EAGtB,IAAI,CAACzB,CAAA,EAAiB;EAEtB,MAAM0B,CAAA,GAA2B;IAC/BvC,4BAAA,EAA8B8B,CAAA;IAC9B7B,oBAAA,EAAAe,CAAA;IACAd,QAAA,EAAUW;EAAA;EAGL,sBAAAf,CAAA,CAAAuC,aAAA,CAACxC,CAAA,CAAY2C,QAAA,EAAZ;IAAqBC,KAAA,EAAOF;EAAA,GAAU9B,CAAS;AACzD;AAEA,MAAMiC,CAAA,GAAUC,CAAA,KAAuB;EAC/B,MAAAtC,CAAA,GAAUP,CAAA,CAAM8C,UAAA,CAAW/C,CAAW;EAE5C,IAAIQ,CAAA,KAAY,QACR,UAAIsB,KAAA,CAAM,4CAA4C;EAGvD,OAAAtB,CAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}