{"ast":null,"code":"import * as e from \"react\";\nimport E, { useAfterpay as m } from \"../../contexts/afterpay/afterpay.es.mjs\";\nimport { AfterpayContext as x, default as z } from \"../../contexts/afterpay/afterpay.es.mjs\";\nimport { useEventListener as g } from \"../../hooks/use-event-listener.es.mjs\";\nimport { useForm as d } from \"../../contexts/form/form.es.mjs\";\nimport { ButtonLoader as k } from \"./afterpay.styles.es.mjs\";\nfunction A({\n  Button: t,\n  buttonColor: n = \"black\",\n  buttonType: o = \"buy_now_with_afterpay\",\n  finalCtaButtonType: c = \"buy_now\",\n  id: r = \"rswps-afterpay-button\",\n  ...f\n}) {\n  const i = e.useRef(null),\n    a = m(),\n    {\n      cardTokenizeResponseReceived: u\n    } = d(),\n    l = e.useMemo(() => ({\n      buttonColor: n,\n      buttonType: o,\n      finalCtaButtonType: c,\n      useCustomButton: Boolean(t)\n    }), [t, n, o, c]),\n    w = async p => {\n      if (p.stopPropagation(), !a) {\n        console.warn(\"Afterpay/Clearpay button was clicked, but no Afterpay/Clearpay instance was found.\");\n        return;\n      }\n      try {\n        const s = await a.tokenize();\n        if (s.status === \"OK\") return u(s);\n        let y = `Tokenization failed with status: ${s?.status}`;\n        if (s?.errors) throw y += ` and errors: ${JSON.stringify(s?.errors)}`, new Error(y);\n        console.warn(y);\n      } catch (s) {\n        console.error(s);\n      }\n    };\n  return e.useEffect(() => (a && a?.attach(`#${r}`, l), () => {\n    a && a?.destroy();\n  }), [a]), g({\n    listener: w,\n    type: \"click\",\n    element: i,\n    options: {\n      passive: !0\n    }\n  }), t ? /* @__PURE__ */e.createElement(t, {\n    ...f,\n    id: r,\n    ref: i\n  }) : /* @__PURE__ */e.createElement(\"div\", {\n    ...f,\n    id: r,\n    ref: i\n  }, a ? null : /* @__PURE__ */e.createElement(k, null));\n}\nfunction C({\n  badgeTheme: t = \"black-on-mint\",\n  component: n,\n  id: o = \"rswps-afterpay-message\",\n  modalLinkStyle: c = \"circled-info-icon\",\n  modalTheme: r = \"mint\",\n  size: f = \"md\",\n  ...i\n}) {\n  const a = e.useRef(null),\n    u = m(),\n    l = e.useMemo(() => ({\n      badgeTheme: t,\n      modalLinkStyle: c,\n      modalTheme: r,\n      size: f\n    }), [t, c, r, f]);\n  e.useEffect(() => {\n    const s = async () => {\n      await u?.attachMessaging(`#${o}`, l);\n    };\n    u && !n?.Message && s();\n  }, [u, n?.Message, l]), g({\n    listener: async s => {\n      s.stopPropagation(), u?.displayInformationModal({\n        modalTheme: r\n      });\n    },\n    type: \"click\",\n    element: a,\n    options: {\n      passive: !0\n    }\n  });\n  const p = n?.Message;\n  return p ? /* @__PURE__ */e.createElement(p, {\n    ...i,\n    id: o,\n    ref: a\n  }) : /* @__PURE__ */e.createElement(\"div\", {\n    ...i,\n    id: o\n  });\n}\nfunction P({\n  includeBranding: t,\n  id: n = \"rswps-afterpay-widget\",\n  ...o\n}) {\n  const c = e.useRef(null),\n    r = m();\n  return e.useEffect(() => {\n    r && (async () => {\n      await r?.attachCheckoutWidget(`#${n}`, {\n        includeBranding: t\n      });\n    })();\n  }, [r, t]), /* @__PURE__ */e.createElement(\"div\", {\n    ...o,\n    id: n,\n    ref: c\n  });\n}\nfunction $(t) {\n  return /* @__PURE__ */e.createElement(E, null, /* @__PURE__ */e.createElement(A, {\n    ...t\n  }));\n}\nexport { A as AfterpayButton, x as AfterpayContext, C as AfterpayMessage, z as AfterpayProvider, P as AfterpayWidget, $ as default };","map":{"version":3,"names":["A","Button","t","buttonColor","n","buttonType","o","finalCtaButtonType","c","id","r","f","i","e","useRef","a","m","cardTokenizeResponseReceived","u","d","l","useMemo","useCustomButton","Boolean","w","p","stopPropagation","console","warn","s","tokenize","status","y","errors","JSON","stringify","Error","error","useEffect","attach","destroy","g","listener","type","element","options","passive","createElement","ref","k","C","badgeTheme","component","modalLinkStyle","modalTheme","size","start","attachMessaging","Message","displayInformationModal","P","includeBranding","attachCheckoutWidget","$","E"],"sources":["/Users/davorins/Desktop/bs/node_modules/react-square-web-payments-sdk/src/components/afterpay/afterpay.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useAfterpay } from '~/contexts/afterpay';\nimport { useEventListener } from '~/hooks/use-event-listener';\nimport { AfterpayContext, AfterpayProvider } from '~/contexts/afterpay';\nimport { useForm } from '~/contexts/form';\nimport { ButtonLoader } from './afterpay.styles';\nimport type {\n  AfterpayButtonProps,\n  AfterpayMessageBaseProps,\n  AfterpayMessageCustomComponentProps,\n  AfterpayMessageProps,\n  AfterpayWidgetProps,\n} from './afterpay.types';\n\nexport function AfterpayButton({\n  Button,\n  buttonColor = 'black',\n  buttonType = 'buy_now_with_afterpay',\n  finalCtaButtonType = 'buy_now',\n  id = 'rswps-afterpay-button',\n  ...props\n}: AfterpayButtonProps) {\n  const containerRef = React.useRef<HTMLElement>(null);\n  const afterpay = useAfterpay();\n  const { cardTokenizeResponseReceived } = useForm();\n\n  const options: Square.AfterpayButtonOptions = React.useMemo(\n    () => ({\n      buttonColor,\n      buttonType,\n      finalCtaButtonType,\n      useCustomButton: Boolean(Button),\n    }),\n    [Button, buttonColor, buttonType, finalCtaButtonType]\n  );\n\n  /**\n   * Handle the on click of the Afterpay button click\n   *\n   * @param e An event which takes place in the DOM.\n   * @returns The data be sended to `cardTokenizeResponseReceived()` function, or an error\n   */\n  const handlePayment = async (e: Event) => {\n    e.stopPropagation();\n\n    if (!afterpay) {\n      console.warn('Afterpay/Clearpay button was clicked, but no Afterpay/Clearpay instance was found.');\n\n      return;\n    }\n\n    try {\n      const result = await afterpay.tokenize();\n\n      if (result.status === 'OK') {\n        return cardTokenizeResponseReceived(result);\n      }\n\n      let message = `Tokenization failed with status: ${result?.status}`;\n      if (result?.errors) {\n        message += ` and errors: ${JSON.stringify(result?.errors)}`;\n\n        throw new Error(message);\n      }\n\n      console.warn(message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  React.useEffect(() => {\n    if (afterpay) {\n      afterpay?.attach(`#${id}`, options);\n    }\n\n    return () => {\n      if (afterpay) {\n        afterpay?.destroy();\n      }\n    };\n  }, [afterpay]);\n\n  useEventListener({\n    listener: handlePayment,\n    type: 'click',\n    element: containerRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  if (Button) {\n    return <Button {...props} id={id} ref={containerRef} />;\n  }\n\n  return (\n    <div {...props} id={id} ref={containerRef as React.RefObject<HTMLDivElement>}>\n      {!afterpay ? <ButtonLoader /> : null}\n    </div>\n  );\n}\n\nexport function AfterpayMessage(props: AfterpayMessageBaseProps): JSX.Element;\nexport function AfterpayMessage(props: AfterpayMessageCustomComponentProps): JSX.Element;\nexport function AfterpayMessage({\n  badgeTheme = 'black-on-mint',\n  component,\n  id = 'rswps-afterpay-message',\n  modalLinkStyle = 'circled-info-icon',\n  modalTheme = 'mint',\n  size = 'md',\n  ...props\n}: AfterpayMessageProps) {\n  const messageRef = React.useRef<HTMLDivElement>(null);\n  const afterpay = useAfterpay();\n\n  const options: Square.AfterpayMessagingOptions = React.useMemo(\n    () => ({\n      badgeTheme,\n      modalLinkStyle,\n      modalTheme,\n      size,\n    }),\n    [badgeTheme, modalLinkStyle, modalTheme, size]\n  );\n\n  React.useEffect(() => {\n    const start = async () => {\n      await afterpay?.attachMessaging(`#${id}`, options);\n    };\n\n    if (afterpay && !component?.Message) {\n      start();\n    }\n  }, [afterpay, component?.Message, options]);\n\n  const onClick = async (e: Event) => {\n    e.stopPropagation();\n\n    afterpay?.displayInformationModal({ modalTheme });\n  };\n\n  useEventListener({\n    listener: onClick,\n    type: 'click',\n    element: messageRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  const Message = component?.Message;\n  if (Message) {\n    return <Message {...props} id={id} ref={messageRef} />;\n  }\n\n  return <div {...props} id={id} />;\n}\n\nexport function AfterpayWidget({ includeBranding, id = 'rswps-afterpay-widget', ...props }: AfterpayWidgetProps) {\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const afterpay = useAfterpay();\n\n  React.useEffect(() => {\n    const start = async () => {\n      await afterpay?.attachCheckoutWidget(`#${id}`, {\n        includeBranding,\n      });\n    };\n\n    if (afterpay) {\n      start();\n    }\n  }, [afterpay, includeBranding]);\n\n  return <div {...props} id={id} ref={containerRef} />;\n}\n\nfunction Afterpay(props: AfterpayButtonProps) {\n  return (\n    <AfterpayProvider>\n      <AfterpayButton {...props} />\n    </AfterpayProvider>\n  );\n}\n\nexport { AfterpayContext, AfterpayProvider };\nexport default Afterpay;\nexport * from './afterpay.types';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}