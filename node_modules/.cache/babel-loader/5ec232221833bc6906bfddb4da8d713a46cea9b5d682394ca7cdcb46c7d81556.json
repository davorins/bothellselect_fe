{"ast":null,"code":"import * as e from \"react\";\nimport { useForm as w } from \"../form/form.es.mjs\";\nconst c = e.createContext(null);\nfunction q({\n  children: t,\n  onShippingAddressChange: o,\n  onShippingOptionChange: s\n}) {\n  const [l, y] = e.useState(null),\n    {\n      createPaymentRequest: a,\n      payments: n\n    } = w();\n  if (!a) throw new Error(\"`createPaymentRequest()` is required when using digital wallets\");\n  return e.useEffect(() => {\n    const i = new AbortController(),\n      {\n        signal: d\n      } = i;\n    return (async u => {\n      const r = n?.paymentRequest(a);\n      if (!r) throw new Error(\"`paymentRequest` is required when using digital wallets\");\n      o && r.addEventListener(\"afterpay_shippingaddresschanged\", o), s && r.addEventListener(\"afterpay_shippingoptionchanged\", s);\n      const p = await n?.afterpayClearpay(r).then(f => u.aborted ? null : (y(f), f));\n      u.aborted && (await p?.destroy());\n    })(d), () => {\n      i.abort();\n    };\n  }, [a, n]), /* @__PURE__ */e.createElement(c.Provider, {\n    value: l\n  }, t);\n}\nfunction v() {\n  const t = e.useContext(c);\n  if (t === void 0) throw new Error(\"`useAfterpay()` must be used within an `<AfterpayProvider>`\");\n  return t;\n}\nexport { c as AfterpayContext, q as default, v as useAfterpay };","map":{"version":3,"names":["c","e","createContext","q","children","t","onShippingAddressChange","o","onShippingOptionChange","s","l","y","useState","createPaymentRequest","a","payments","n","w","Error","useEffect","i","AbortController","signal","d","u","r","paymentRequest","addEventListener","p","afterpayClearpay","then","f","aborted","destroy","abort","createElement","Provider","value","v","useContext"],"sources":["/Users/davorins/Desktop/bs/node_modules/react-square-web-payments-sdk/src/contexts/afterpay/afterpay.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useForm } from '../form';\nimport type { AfterpayProviderProps } from './afterpay.types';\n\nexport const AfterpayContext = React.createContext<Square.AfterpayClearpay | null | undefined>(null);\n\nfunction AfterpayProvider({ children, onShippingAddressChange, onShippingOptionChange }: AfterpayProviderProps) {\n  const [afterpay, setAfterpay] = React.useState<Square.AfterpayClearpay | null>(null);\n  const { createPaymentRequest, payments } = useForm();\n\n  if (!createPaymentRequest) {\n    throw new Error('`createPaymentRequest()` is required when using digital wallets');\n  }\n\n  React.useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    const start = async (signal: AbortSignal) => {\n      const paymentRequest = payments?.paymentRequest(createPaymentRequest);\n\n      if (!paymentRequest) {\n        throw new Error('`paymentRequest` is required when using digital wallets');\n      }\n\n      if (onShippingAddressChange) {\n        paymentRequest.addEventListener('afterpay_shippingaddresschanged', onShippingAddressChange);\n      }\n      if (onShippingOptionChange) {\n        paymentRequest.addEventListener('afterpay_shippingoptionchanged', onShippingOptionChange);\n      }\n\n      const afterpay = await payments?.afterpayClearpay(paymentRequest).then((res) => {\n        if (!signal.aborted) {\n          setAfterpay(res);\n\n          return res;\n        }\n\n        return null;\n      });\n\n      if (signal.aborted) {\n        await afterpay?.destroy();\n      }\n    };\n\n    start(signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [createPaymentRequest, payments]);\n\n  return <AfterpayContext.Provider value={afterpay}>{children}</AfterpayContext.Provider>;\n}\n\nexport function useAfterpay() {\n  const context = React.useContext(AfterpayContext);\n\n  if (context === undefined) {\n    throw new Error('`useAfterpay()` must be used within an `<AfterpayProvider>`');\n  }\n\n  return context;\n}\n\nexport default AfterpayProvider;\n"],"mappings":";;AAQa,MAAAA,CAAA,GAAkBC,CAAA,CAAMC,aAAA,CAA0D,IAAI;AAEnG,SAASC,EAAiB;EAAEC,QAAA,EAAAC,CAAA;EAAUC,uBAAA,EAAAC,CAAA;EAAyBC,sBAAA,EAAAC;AAAA,GAAiD;EAC9G,MAAM,CAACC,CAAA,EAAUC,CAAW,IAAIV,CAAA,CAAMW,QAAA,CAAyC,IAAI;IAC7E;MAAEC,oBAAA,EAAAC,CAAA;MAAsBC,QAAA,EAAAC;IAAS,IAAIC,CAAA,CAAQ;EAEnD,IAAI,CAACH,CAAA,EACG,UAAII,KAAA,CAAM,iEAAiE;EAGnF,OAAAjB,CAAA,CAAMkB,SAAA,CAAU,MAAM;IACd,MAAAC,CAAA,GAAkB,IAAIC,eAAA;MACtB;QAAEC,MAAA,EAAAC;MAAW,IAAAH,CAAA;IA+BnB,QA7Bc,MAAOI,CAAA,IAAwB;MACrC,MAAAC,CAAA,GAAiBT,CAAA,EAAUU,cAAA,CAAeZ,CAAoB;MAEpE,IAAI,CAACW,CAAA,EACG,UAAIP,KAAA,CAAM,yDAAyD;MAGvEX,CAAA,IACakB,CAAA,CAAAE,gBAAA,CAAiB,mCAAmCpB,CAAuB,GAExFE,CAAA,IACagB,CAAA,CAAAE,gBAAA,CAAiB,kCAAkClB,CAAsB;MAGpF,MAAAmB,CAAA,GAAW,MAAMZ,CAAA,EAAUa,gBAAA,CAAiBJ,CAAc,EAAEK,IAAA,CAAMC,CAAA,IACjEP,CAAA,CAAOQ,OAAA,GAML,QALLrB,CAAA,CAAYoB,CAAG,GAERA,CAAA,CAIV;MAEGP,CAAA,CAAOQ,OAAA,KACT,MAAMJ,CAAA,EAAUK,OAAA;IAClB,GAGIV,CAAM,GAEL,MAAM;MACXH,CAAA,CAAgBc,KAAA,CAAM;IAAA;EACxB,GACC,CAACpB,CAAA,EAAsBE,CAAQ,CAAC,GAE5B,eAAAf,CAAA,CAAAkC,aAAA,CAACnC,CAAA,CAAgBoC,QAAA,EAAhB;IAAyBC,KAAA,EAAO3B;EAAA,GAAWL,CAAS;AAC9D;AAEO,SAASiC,EAAA,EAAc;EACtB,MAAAjC,CAAA,GAAUJ,CAAA,CAAMsC,UAAA,CAAWvC,CAAe;EAEhD,IAAIK,CAAA,KAAY,QACR,UAAIa,KAAA,CAAM,6DAA6D;EAGxE,OAAAb,CAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}