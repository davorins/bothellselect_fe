{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { all_routes } from '../router/all_routes';\nimport { useAuth } from '../../context/AuthContext';\nexport const useParentActions = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    fetchParentPlayers,\n    fetchAllGuardians\n  } = useAuth();\n  const routes = all_routes;\n  const handleParentClick = async record => {\n    try {\n      // Determine the target ID (use parentId for guardians, fallback to _id)\n      const targetId = record.parentId || record._id;\n\n      // If record is just an ID string, do basic navigation\n      if (typeof record === 'string') {\n        navigate(`${routes.parentDetail}/${record}`);\n        return;\n      }\n\n      // Fetch associated data (players and guardians)\n      const [players, guardians] = await Promise.all([fetchParentPlayers(targetId), fetchAllGuardians(`parentId=${targetId}`)]);\n\n      // Update recently viewed\n      const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedParents') || '[]');\n      const updatedRecentlyViewed = [targetId, ...recentlyViewed.filter(id => id !== targetId)].slice(0, 5);\n      localStorage.setItem('recentlyViewedParents', JSON.stringify(updatedRecentlyViewed));\n\n      // Navigate to the parent detail page\n      navigate(`${routes.parentDetail}/${targetId}`, {\n        state: {\n          parent: {\n            ...record,\n            parentId: targetId,\n            players\n          },\n          guardians,\n          // Include flag if this was a guardian click\n          isGuardianView: !!record.parentId || record.type === 'guardian'\n        }\n      });\n    } catch (err) {\n      console.error('Error in handleParentClick:', err);\n      // Fallback to basic navigation\n      const targetId = record.parentId || record._id || record;\n      navigate(`${routes.parentDetail}/${targetId}`);\n    }\n  };\n  return {\n    handleParentClick\n  };\n};\n_s(useParentActions, \"3ln+y/70w4C1qP7AH7gNghgyyWk=\", false, function () {\n  return [useNavigate, useAuth];\n});","map":{"version":3,"names":["useNavigate","all_routes","useAuth","useParentActions","_s","navigate","fetchParentPlayers","fetchAllGuardians","routes","handleParentClick","record","targetId","parentId","_id","parentDetail","players","guardians","Promise","all","recentlyViewed","JSON","parse","localStorage","getItem","updatedRecentlyViewed","filter","id","slice","setItem","stringify","state","parent","isGuardianView","type","err","console","error"],"sources":["/Users/davorins/Desktop/bs/src/feature-module/hooks/useParentActions.ts"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { all_routes } from '../router/all_routes';\nimport { useAuth } from '../../context/AuthContext';\n\nexport const useParentActions = () => {\n  const navigate = useNavigate();\n  const { fetchParentPlayers, fetchAllGuardians } = useAuth();\n  const routes = all_routes;\n\n  const handleParentClick = async (record: any) => {\n    try {\n      // Determine the target ID (use parentId for guardians, fallback to _id)\n      const targetId = record.parentId || record._id;\n\n      // If record is just an ID string, do basic navigation\n      if (typeof record === 'string') {\n        navigate(`${routes.parentDetail}/${record}`);\n        return;\n      }\n\n      // Fetch associated data (players and guardians)\n      const [players, guardians] = await Promise.all([\n        fetchParentPlayers(targetId),\n        fetchAllGuardians(`parentId=${targetId}`),\n      ]);\n\n      // Update recently viewed\n      const recentlyViewed = JSON.parse(\n        localStorage.getItem('recentlyViewedParents') || '[]'\n      );\n      const updatedRecentlyViewed = [\n        targetId,\n        ...recentlyViewed.filter((id: string) => id !== targetId),\n      ].slice(0, 5);\n      localStorage.setItem(\n        'recentlyViewedParents',\n        JSON.stringify(updatedRecentlyViewed)\n      );\n\n      // Navigate to the parent detail page\n      navigate(`${routes.parentDetail}/${targetId}`, {\n        state: {\n          parent: {\n            ...record,\n            parentId: targetId,\n            players,\n          },\n          guardians,\n          // Include flag if this was a guardian click\n          isGuardianView: !!record.parentId || record.type === 'guardian',\n        },\n      });\n    } catch (err) {\n      console.error('Error in handleParentClick:', err);\n      // Fallback to basic navigation\n      const targetId = record.parentId || record._id || record;\n      navigate(`${routes.parentDetail}/${targetId}`);\n    }\n  };\n\n  return { handleParentClick };\n};\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,OAAO,QAAQ,2BAA2B;AAEnD,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,kBAAkB;IAAEC;EAAkB,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC3D,MAAMM,MAAM,GAAGP,UAAU;EAEzB,MAAMQ,iBAAiB,GAAG,MAAOC,MAAW,IAAK;IAC/C,IAAI;MACF;MACA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,QAAQ,IAAIF,MAAM,CAACG,GAAG;;MAE9C;MACA,IAAI,OAAOH,MAAM,KAAK,QAAQ,EAAE;QAC9BL,QAAQ,CAAC,GAAGG,MAAM,CAACM,YAAY,IAAIJ,MAAM,EAAE,CAAC;QAC5C;MACF;;MAEA;MACA,MAAM,CAACK,OAAO,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC7CZ,kBAAkB,CAACK,QAAQ,CAAC,EAC5BJ,iBAAiB,CAAC,YAAYI,QAAQ,EAAE,CAAC,CAC1C,CAAC;;MAEF;MACA,MAAMQ,cAAc,GAAGC,IAAI,CAACC,KAAK,CAC/BC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC,IAAI,IACnD,CAAC;MACD,MAAMC,qBAAqB,GAAG,CAC5Bb,QAAQ,EACR,GAAGQ,cAAc,CAACM,MAAM,CAAEC,EAAU,IAAKA,EAAE,KAAKf,QAAQ,CAAC,CAC1D,CAACgB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACbL,YAAY,CAACM,OAAO,CAClB,uBAAuB,EACvBR,IAAI,CAACS,SAAS,CAACL,qBAAqB,CACtC,CAAC;;MAED;MACAnB,QAAQ,CAAC,GAAGG,MAAM,CAACM,YAAY,IAAIH,QAAQ,EAAE,EAAE;QAC7CmB,KAAK,EAAE;UACLC,MAAM,EAAE;YACN,GAAGrB,MAAM;YACTE,QAAQ,EAAED,QAAQ;YAClBI;UACF,CAAC;UACDC,SAAS;UACT;UACAgB,cAAc,EAAE,CAAC,CAACtB,MAAM,CAACE,QAAQ,IAAIF,MAAM,CAACuB,IAAI,KAAK;QACvD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;MACjD;MACA,MAAMvB,QAAQ,GAAGD,MAAM,CAACE,QAAQ,IAAIF,MAAM,CAACG,GAAG,IAAIH,MAAM;MACxDL,QAAQ,CAAC,GAAGG,MAAM,CAACM,YAAY,IAAIH,QAAQ,EAAE,CAAC;IAChD;EACF,CAAC;EAED,OAAO;IAAEF;EAAkB,CAAC;AAC9B,CAAC;AAACL,EAAA,CAzDWD,gBAAgB;EAAA,QACVH,WAAW,EACsBE,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}