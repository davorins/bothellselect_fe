{"ast":null,"code":"import moment from 'moment';\nexport const transformParentData = (parents, guardians, currentUser) => {\n  if (!currentUser) return [];\n  const getSafeDate = date => {\n    return date || new Date().toISOString();\n  };\n\n  // For non-admin/coach users, only show their own data\n  if (currentUser.role === 'user') {\n    return [{\n      _id: currentUser._id,\n      fullName: currentUser.fullName,\n      email: currentUser.email,\n      phone: currentUser.phone,\n      address: currentUser.address,\n      role: currentUser.role,\n      type: 'parent',\n      // Explicit type\n      status: 'Active',\n      DateofJoin: getSafeDate(currentUser.createdAt),\n      imgSrc: currentUser.avatar || '',\n      aauNumber: currentUser.aauNumber || 'N/A',\n      canView: true,\n      createdAt: getSafeDate(currentUser.createdAt),\n      players: currentUser.players || [],\n      isCoach: currentUser.isCoach\n    }];\n  }\n  const processedParentIds = new Set();\n  const parentRecords = parents.map(parent => {\n    processedParentIds.add(parent._id);\n    return {\n      _id: parent._id,\n      fullName: parent.fullName,\n      email: parent.email,\n      phone: parent.phone,\n      address: parent.address,\n      role: parent.role,\n      type: parent.isCoach ? 'coach' : 'parent',\n      // Explicit type\n      status: 'Active',\n      DateofJoin: getSafeDate(parent.createdAt),\n      imgSrc: parent.avatar || '',\n      aauNumber: parent.aauNumber || 'N/A',\n      canView: true,\n      createdAt: getSafeDate(parent.createdAt),\n      players: parent.players || [],\n      isCoach: parent.isCoach\n    };\n  });\n  const guardianRecords = (guardians || []).filter(guardian => !processedParentIds.has(guardian._id || guardian.id || '')).flatMap(guardian => {\n    const guardianId = guardian._id || guardian.id || '';\n    const mainGuardian = {\n      _id: guardianId,\n      fullName: guardian.fullName,\n      email: guardian.email,\n      phone: guardian.phone,\n      address: guardian.address,\n      role: 'guardian',\n      type: 'guardian',\n      // Explicit type\n      status: 'Active',\n      DateofJoin: getSafeDate(guardian.createdAt),\n      imgSrc: 'assets/img/profiles/avatar-27.jpg',\n      aauNumber: guardian.aauNumber || 'N/A',\n      canView: true,\n      createdAt: getSafeDate(guardian.createdAt),\n      players: guardian.players || [],\n      isCoach: guardian.isCoach\n    };\n\n    // Handle additional guardians from parent objects\n    const parentWithAdditional = parents.find(p => p._id === guardianId);\n    const additionalFromParent = (parentWithAdditional === null || parentWithAdditional === void 0 ? void 0 : parentWithAdditional.additionalGuardians) || [];\n    const additionalGuardians = additionalFromParent.map((g, index) => ({\n      _id: g.id || `${guardianId}-${index}`,\n      fullName: g.fullName,\n      email: g.email,\n      phone: g.phone,\n      address: g.address,\n      role: 'guardian',\n      type: 'guardian',\n      // Explicit type\n      status: 'Active',\n      DateofJoin: getSafeDate(g.createdAt),\n      imgSrc: 'assets/img/profiles/avatar-27.jpg',\n      aauNumber: g.aauNumber || 'N/A',\n      parentId: guardianId,\n      canView: true,\n      createdAt: getSafeDate(g.createdAt),\n      players: g.players || [],\n      isCoach: g.isCoach\n    }));\n    return [mainGuardian, ...additionalGuardians];\n  });\n  return [...parentRecords, ...guardianRecords];\n};\nexport const filterParentData = (data, filters, currentUserRole) => {\n  const seenIds = new Set();\n  return data.filter(item => {\n    var _item$email$toLowerCa, _item$email, _item$phone$replace$i, _item$phone;\n    // Create a unique key for this record\n    const recordKey = `${item._id}-${item.type}`;\n\n    // Skip if we've already seen this record\n    if (seenIds.has(recordKey)) {\n      return false;\n    }\n    seenIds.add(recordKey);\n\n    // Apply role-based filtering first\n    if (currentUserRole === 'user' && !item.canView) {\n      return false;\n    }\n\n    // Name filter\n    if (filters.nameFilter && !item.fullName.toLowerCase().includes(filters.nameFilter.toLowerCase())) {\n      return false;\n    }\n\n    // Email filter\n    if (filters.emailFilter && !((_item$email$toLowerCa = (_item$email = item.email) === null || _item$email === void 0 ? void 0 : _item$email.toLowerCase().includes(filters.emailFilter.toLowerCase())) !== null && _item$email$toLowerCa !== void 0 ? _item$email$toLowerCa : true)) {\n      return false;\n    }\n\n    // Phone filter\n    if (filters.phoneFilter && !((_item$phone$replace$i = (_item$phone = item.phone) === null || _item$phone === void 0 ? void 0 : _item$phone.replace(/\\D/g, '').includes(filters.phoneFilter.replace(/\\D/g, ''))) !== null && _item$phone$replace$i !== void 0 ? _item$phone$replace$i : true)) {\n      return false;\n    }\n\n    // Status filter\n    if (filters.statusFilter && item.status !== filters.statusFilter) {\n      return false;\n    }\n\n    // Role filter (updated to handle coaches)\n    if (filters.roleFilter) {\n      if (filters.roleFilter === 'parent' && item.type !== 'parent') {\n        return false;\n      }\n      if (filters.roleFilter === 'guardian' && item.type !== 'guardian') {\n        return false;\n      }\n      if (filters.roleFilter === 'coach') {\n        // Check both role and isCoach fields\n        if (item.role !== 'coach' && !item.isCoach) {\n          return false;\n        }\n      } else if (filters.roleFilter !== 'parent' && filters.roleFilter !== 'guardian' && item.role !== filters.roleFilter) {\n        return false;\n      }\n    }\n\n    // Date range filter\n    if (filters.dateRange) {\n      const [start, end] = filters.dateRange;\n      const itemDate = moment(item.DateofJoin);\n      if (!itemDate.isBetween(start, end, undefined, '[]')) {\n        return false;\n      }\n    }\n    return true;\n  });\n};\n\n// Sort function remains the same\nexport const sortParentData = (data, sortOrder) => {\n  if (!sortOrder) return data;\n  return [...data].sort((a, b) => {\n    if (sortOrder === 'asc') return a.fullName.localeCompare(b.fullName);\n    if (sortOrder === 'desc') return b.fullName.localeCompare(a.fullName);\n    if (sortOrder === 'recentlyAdded') {\n      return new Date(b.DateofJoin).getTime() - new Date(a.DateofJoin).getTime();\n    }\n    if (sortOrder === 'recentlyViewed') {\n      const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed') || '[]');\n      return recentlyViewed.indexOf(b._id) - recentlyViewed.indexOf(a._id);\n    }\n    return 0;\n  });\n};","map":{"version":3,"names":["moment","transformParentData","parents","guardians","currentUser","getSafeDate","date","Date","toISOString","role","_id","fullName","email","phone","address","type","status","DateofJoin","createdAt","imgSrc","avatar","aauNumber","canView","players","isCoach","processedParentIds","Set","parentRecords","map","parent","add","guardianRecords","filter","guardian","has","id","flatMap","guardianId","mainGuardian","parentWithAdditional","find","p","additionalFromParent","additionalGuardians","g","index","parentId","filterParentData","data","filters","currentUserRole","seenIds","item","_item$email$toLowerCa","_item$email","_item$phone$replace$i","_item$phone","recordKey","nameFilter","toLowerCase","includes","emailFilter","phoneFilter","replace","statusFilter","roleFilter","dateRange","start","end","itemDate","isBetween","undefined","sortParentData","sortOrder","sort","a","b","localeCompare","getTime","recentlyViewed","JSON","parse","localStorage","getItem","indexOf"],"sources":["/Users/davorins/Desktop/bs/src/utils/parentUtils.ts"],"sourcesContent":["import moment, { Moment } from 'moment';\nimport { Player, Parent, Guardian, TableRecord } from '../types/types';\n\ninterface ExtendedTableRecord extends TableRecord {\n  type: 'parent' | 'guardian' | 'coach';\n  status: string;\n  DateofJoin: string;\n  imgSrc: string;\n  canView: boolean;\n  parentId?: string;\n  aauNumber?: string;\n  createdAt: string;\n  players?: Player[];\n  isCoach?: boolean;\n}\n\nexport const transformParentData = (\n  parents: Parent[],\n  guardians: Guardian[],\n  currentUser: Parent | null\n): ExtendedTableRecord[] => {\n  if (!currentUser) return [];\n\n  const getSafeDate = (date: string | undefined): string => {\n    return date || new Date().toISOString();\n  };\n\n  // For non-admin/coach users, only show their own data\n  if (currentUser.role === 'user') {\n    return [\n      {\n        _id: currentUser._id,\n        fullName: currentUser.fullName,\n        email: currentUser.email,\n        phone: currentUser.phone,\n        address: currentUser.address,\n        role: currentUser.role,\n        type: 'parent', // Explicit type\n        status: 'Active',\n        DateofJoin: getSafeDate(currentUser.createdAt),\n        imgSrc: currentUser.avatar || '',\n        aauNumber: currentUser.aauNumber || 'N/A',\n        canView: true,\n        createdAt: getSafeDate(currentUser.createdAt),\n        players: currentUser.players || [],\n        isCoach: currentUser.isCoach,\n      },\n    ];\n  }\n\n  const processedParentIds = new Set<string>();\n\n  const parentRecords: ExtendedTableRecord[] = parents.map((parent) => {\n    processedParentIds.add(parent._id);\n    return {\n      _id: parent._id,\n      fullName: parent.fullName,\n      email: parent.email,\n      phone: parent.phone,\n      address: parent.address,\n      role: parent.role,\n      type: parent.isCoach ? 'coach' : 'parent', // Explicit type\n      status: 'Active',\n      DateofJoin: getSafeDate(parent.createdAt),\n      imgSrc: parent.avatar || '',\n      aauNumber: parent.aauNumber || 'N/A',\n      canView: true,\n      createdAt: getSafeDate(parent.createdAt),\n      players: parent.players || [],\n      isCoach: parent.isCoach,\n    };\n  });\n\n  const guardianRecords: ExtendedTableRecord[] = (guardians || [])\n    .filter(\n      (guardian) => !processedParentIds.has(guardian._id || guardian.id || '')\n    )\n    .flatMap((guardian) => {\n      const guardianId = guardian._id || guardian.id || '';\n\n      const mainGuardian: ExtendedTableRecord = {\n        _id: guardianId,\n        fullName: guardian.fullName,\n        email: guardian.email,\n        phone: guardian.phone,\n        address: guardian.address,\n        role: 'guardian',\n        type: 'guardian', // Explicit type\n        status: 'Active',\n        DateofJoin: getSafeDate(guardian.createdAt as string | undefined),\n        imgSrc: 'assets/img/profiles/avatar-27.jpg',\n        aauNumber: guardian.aauNumber || 'N/A',\n        canView: true,\n        createdAt: getSafeDate(guardian.createdAt as string | undefined),\n        players: guardian.players || [],\n        isCoach: guardian.isCoach,\n      };\n\n      // Handle additional guardians from parent objects\n      const parentWithAdditional = parents.find((p) => p._id === guardianId);\n      const additionalFromParent =\n        parentWithAdditional?.additionalGuardians || [];\n\n      const additionalGuardians: ExtendedTableRecord[] =\n        additionalFromParent.map((g, index) => ({\n          _id: g.id || `${guardianId}-${index}`,\n          fullName: g.fullName,\n          email: g.email,\n          phone: g.phone,\n          address: g.address,\n          role: 'guardian',\n          type: 'guardian', // Explicit type\n          status: 'Active',\n          DateofJoin: getSafeDate(g.createdAt as string | undefined),\n          imgSrc: 'assets/img/profiles/avatar-27.jpg',\n          aauNumber: g.aauNumber || 'N/A',\n          parentId: guardianId,\n          canView: true,\n          createdAt: getSafeDate(g.createdAt as string | undefined),\n          players: g.players || [],\n          isCoach: g.isCoach,\n        }));\n\n      return [mainGuardian, ...additionalGuardians];\n    });\n\n  return [...parentRecords, ...guardianRecords];\n};\n\nexport const filterParentData = (\n  data: ExtendedTableRecord[],\n  filters: {\n    nameFilter: string;\n    emailFilter: string;\n    phoneFilter: string;\n    statusFilter: string | null;\n    roleFilter: string | null;\n    dateRange: [Moment, Moment] | null;\n  },\n  currentUserRole: string\n): ExtendedTableRecord[] => {\n  const seenIds = new Set<string>();\n\n  return data.filter((item) => {\n    // Create a unique key for this record\n    const recordKey = `${item._id}-${item.type}`;\n\n    // Skip if we've already seen this record\n    if (seenIds.has(recordKey)) {\n      return false;\n    }\n    seenIds.add(recordKey);\n\n    // Apply role-based filtering first\n    if (currentUserRole === 'user' && !item.canView) {\n      return false;\n    }\n\n    // Name filter\n    if (\n      filters.nameFilter &&\n      !item.fullName.toLowerCase().includes(filters.nameFilter.toLowerCase())\n    ) {\n      return false;\n    }\n\n    // Email filter\n    if (\n      filters.emailFilter &&\n      !(\n        item.email?.toLowerCase().includes(filters.emailFilter.toLowerCase()) ??\n        true\n      )\n    ) {\n      return false;\n    }\n\n    // Phone filter\n    if (\n      filters.phoneFilter &&\n      !(\n        item.phone\n          ?.replace(/\\D/g, '')\n          .includes(filters.phoneFilter.replace(/\\D/g, '')) ?? true\n      )\n    ) {\n      return false;\n    }\n\n    // Status filter\n    if (filters.statusFilter && item.status !== filters.statusFilter) {\n      return false;\n    }\n\n    // Role filter (updated to handle coaches)\n    if (filters.roleFilter) {\n      if (filters.roleFilter === 'parent' && item.type !== 'parent') {\n        return false;\n      }\n      if (filters.roleFilter === 'guardian' && item.type !== 'guardian') {\n        return false;\n      }\n      if (filters.roleFilter === 'coach') {\n        // Check both role and isCoach fields\n        if (item.role !== 'coach' && !item.isCoach) {\n          return false;\n        }\n      } else if (\n        filters.roleFilter !== 'parent' &&\n        filters.roleFilter !== 'guardian' &&\n        item.role !== filters.roleFilter\n      ) {\n        return false;\n      }\n    }\n\n    // Date range filter\n    if (filters.dateRange) {\n      const [start, end] = filters.dateRange;\n      const itemDate = moment(item.DateofJoin);\n      if (!itemDate.isBetween(start, end, undefined, '[]')) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n\n// Sort function remains the same\nexport const sortParentData = (\n  data: ExtendedTableRecord[],\n  sortOrder: 'asc' | 'desc' | 'recentlyViewed' | 'recentlyAdded' | null\n): ExtendedTableRecord[] => {\n  if (!sortOrder) return data;\n\n  return [...data].sort((a, b) => {\n    if (sortOrder === 'asc') return a.fullName.localeCompare(b.fullName);\n    if (sortOrder === 'desc') return b.fullName.localeCompare(a.fullName);\n    if (sortOrder === 'recentlyAdded') {\n      return (\n        new Date(b.DateofJoin).getTime() - new Date(a.DateofJoin).getTime()\n      );\n    }\n    if (sortOrder === 'recentlyViewed') {\n      const recentlyViewed = JSON.parse(\n        localStorage.getItem('recentlyViewed') || '[]'\n      );\n      return recentlyViewed.indexOf(b._id) - recentlyViewed.indexOf(a._id);\n    }\n    return 0;\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}