var w = (e, r, t) => new Promise((n, i) => {
  var d = (o) => {
    try {
      a(t.next(o));
    } catch (s) {
      i(s);
    }
  }, p = (o) => {
    try {
      a(t.throw(o));
    } catch (s) {
      i(s);
    }
  }, a = (o) => o.done ? n(o.value) : Promise.resolve(o.value).then(d, p);
  a((t = t.apply(e, r)).next());
});
function h(e) {
  return document.querySelector(`script[src="${e}"]`);
}
function f(e) {
  let r = document.head || document.body;
  if (!r)
    throw new Error("Square.js requires a <body> or <head> element.");
  let t = document.createElement("script");
  return t.src = e, r.appendChild(t), t;
}
var u = null;
function m(e) {
  return u !== null || (u = new Promise((r, t) => {
    if (typeof window > "u") {
      r(null);
      return;
    }
    if (window.Square) {
      r(window.Square);
      return;
    }
    try {
      let n = h(e);
      n || (n = f(e)), n.addEventListener("load", () => {
        window.Square ? r(window.Square) : t(new Error("Square.js failed to load properly."));
      }), n.addEventListener("error", () => {
        t(new Error("Error occurred while loading Square.js"));
      });
    } catch (n) {
      t(n);
    }
  })), u;
}
var y = "v1", l = class c extends Error {
  constructor(r = "The Payment 'applicationId' option is not in the correct format.") {
    super(r), this.name = "InvalidApplicationIdError", Object.setPrototypeOf(this, c.prototype);
  }
};
function q(e) {
  let r = "";
  if (typeof e != "string" || e === null)
    throw new l();
  if (e.startsWith("sq0idp-") && (r = "https://web.squarecdn.com/"), e.startsWith("sandbox-sq0idb-") && (r = "https://sandbox.web.squarecdn.com/"), r.length === 0)
    throw new l();
  return r += `${y}/square.js`, r;
}
function v(e, r, t) {
  return w(this, null, function* () {
    let n = t?.scriptSrc === void 0 ? q(e) : t.scriptSrc, i = yield m(n);
    return i === null ? null : i.payments(e, r);
  });
}
export {
  v as payments
};
//# sourceMappingURL=index.es.mjs.map
